2024-03-12 00:05:34,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-12 00:05:34,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-12 00:05:34,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-12 00:05:34,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-12 00:09:48,634:INFO:PyCaret ClassificationExperiment
2024-03-12 00:09:48,634:INFO:Logging name: clf-default-name
2024-03-12 00:09:48,634:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-03-12 00:09:48,634:INFO:version 3.3.0
2024-03-12 00:09:48,634:INFO:Initializing setup()
2024-03-12 00:09:48,634:INFO:self.USI: 591f
2024-03-12 00:09:48,634:INFO:self._variable_keys: {'y_test', 'gpu_n_jobs_param', 'memory', 'target_param', 'fold_groups_param', 'USI', 'exp_name_log', 'fold_generator', 'seed', 'pipeline', 'fix_imbalance', 'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'logging_param', 'data', 'exp_id', 'X_test', '_available_plots', 'y_train', '_ml_usecase', 'is_multiclass', 'X', 'html_param', 'gpu_param', 'idx', 'fold_shuffle_param'}
2024-03-12 00:09:48,634:INFO:Checking environment
2024-03-12 00:09:48,634:INFO:python_version: 3.11.5
2024-03-12 00:09:48,634:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-12 00:09:48,634:INFO:machine: AMD64
2024-03-12 00:09:48,634:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-12 00:09:48,635:INFO:Memory: svmem(total=10420604928, available=961990656, percent=90.8, used=9458614272, free=961990656)
2024-03-12 00:09:48,635:INFO:Physical Core: 8
2024-03-12 00:09:48,635:INFO:Logical Core: 16
2024-03-12 00:09:48,635:INFO:Checking libraries
2024-03-12 00:09:48,635:INFO:System:
2024-03-12 00:09:48,635:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-12 00:09:48,635:INFO:executable: c:\Users\macks\anaconda3\envs\dev\python.exe
2024-03-12 00:09:48,635:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-12 00:09:48,635:INFO:PyCaret required dependencies:
2024-03-12 00:09:49,103:INFO:                 pip: 23.2.1
2024-03-12 00:09:49,103:INFO:          setuptools: 68.0.0
2024-03-12 00:09:49,103:INFO:             pycaret: 3.3.0
2024-03-12 00:09:49,103:INFO:             IPython: 8.15.0
2024-03-12 00:09:49,103:INFO:          ipywidgets: 8.1.2
2024-03-12 00:09:49,103:INFO:                tqdm: 4.65.0
2024-03-12 00:09:49,103:INFO:               numpy: 1.24.3
2024-03-12 00:09:49,103:INFO:              pandas: 2.0.3
2024-03-12 00:09:49,103:INFO:              jinja2: 3.1.2
2024-03-12 00:09:49,103:INFO:               scipy: 1.11.3
2024-03-12 00:09:49,103:INFO:              joblib: 1.3.2
2024-03-12 00:09:49,103:INFO:             sklearn: 1.4.1.post1
2024-03-12 00:09:49,103:INFO:                pyod: 1.1.3
2024-03-12 00:09:49,104:INFO:            imblearn: 0.12.0
2024-03-12 00:09:49,104:INFO:   category_encoders: 2.6.3
2024-03-12 00:09:49,104:INFO:            lightgbm: 4.3.0
2024-03-12 00:09:49,104:INFO:               numba: 0.58.0
2024-03-12 00:09:49,104:INFO:            requests: 2.31.0
2024-03-12 00:09:49,104:INFO:          matplotlib: 3.8.0
2024-03-12 00:09:49,104:INFO:          scikitplot: 0.3.7
2024-03-12 00:09:49,104:INFO:         yellowbrick: 1.5
2024-03-12 00:09:49,104:INFO:              plotly: 5.17.0
2024-03-12 00:09:49,104:INFO:    plotly-resampler: Not installed
2024-03-12 00:09:49,104:INFO:             kaleido: 0.2.1
2024-03-12 00:09:49,104:INFO:           schemdraw: 0.15
2024-03-12 00:09:49,104:INFO:         statsmodels: 0.14.0
2024-03-12 00:09:49,104:INFO:              sktime: 0.27.0
2024-03-12 00:09:49,104:INFO:               tbats: 1.1.3
2024-03-12 00:09:49,104:INFO:            pmdarima: 2.0.4
2024-03-12 00:09:49,104:INFO:              psutil: 5.9.0
2024-03-12 00:09:49,104:INFO:          markupsafe: 2.1.1
2024-03-12 00:09:49,104:INFO:             pickle5: Not installed
2024-03-12 00:09:49,104:INFO:         cloudpickle: 2.2.1
2024-03-12 00:09:49,104:INFO:         deprecation: 2.1.0
2024-03-12 00:09:49,104:INFO:              xxhash: 3.4.1
2024-03-12 00:09:49,104:INFO:           wurlitzer: Not installed
2024-03-12 00:09:49,104:INFO:PyCaret optional dependencies:
2024-03-12 00:09:49,113:INFO:                shap: Not installed
2024-03-12 00:09:49,113:INFO:           interpret: Not installed
2024-03-12 00:09:49,113:INFO:                umap: Not installed
2024-03-12 00:09:49,113:INFO:     ydata_profiling: Not installed
2024-03-12 00:09:49,113:INFO:  explainerdashboard: Not installed
2024-03-12 00:09:49,113:INFO:             autoviz: Not installed
2024-03-12 00:09:49,113:INFO:           fairlearn: Not installed
2024-03-12 00:09:49,113:INFO:          deepchecks: Not installed
2024-03-12 00:09:49,114:INFO:             xgboost: Not installed
2024-03-12 00:09:49,114:INFO:            catboost: Not installed
2024-03-12 00:09:49,114:INFO:              kmodes: Not installed
2024-03-12 00:09:49,114:INFO:             mlxtend: Not installed
2024-03-12 00:09:49,114:INFO:       statsforecast: Not installed
2024-03-12 00:09:49,114:INFO:        tune_sklearn: Not installed
2024-03-12 00:09:49,114:INFO:                 ray: Not installed
2024-03-12 00:09:49,114:INFO:            hyperopt: Not installed
2024-03-12 00:09:49,114:INFO:              optuna: Not installed
2024-03-12 00:09:49,114:INFO:               skopt: Not installed
2024-03-12 00:09:49,114:INFO:              mlflow: Not installed
2024-03-12 00:09:49,114:INFO:              gradio: Not installed
2024-03-12 00:09:49,114:INFO:             fastapi: Not installed
2024-03-12 00:09:49,114:INFO:             uvicorn: Not installed
2024-03-12 00:09:49,114:INFO:              m2cgen: Not installed
2024-03-12 00:09:49,114:INFO:           evidently: Not installed
2024-03-12 00:09:49,114:INFO:               fugue: Not installed
2024-03-12 00:09:49,114:INFO:           streamlit: Not installed
2024-03-12 00:09:49,114:INFO:             prophet: Not installed
2024-03-12 00:09:49,114:INFO:None
2024-03-12 00:09:49,114:INFO:Set up data.
2024-03-12 00:09:49,118:INFO:Set up folding strategy.
2024-03-12 00:09:49,118:INFO:Set up train/test split.
2024-03-12 00:09:49,123:INFO:Set up index.
2024-03-12 00:09:49,124:INFO:Assigning column types.
2024-03-12 00:09:49,125:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-12 00:09:49,151:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-12 00:09:49,155:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-12 00:09:49,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,207:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-12 00:09:49,208:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-12 00:09:49,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,225:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-12 00:09:49,252:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-12 00:09:49,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,296:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-12 00:09:49,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,312:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-03-12 00:09:49,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,402:INFO:Preparing preprocessing pipeline...
2024-03-12 00:09:49,403:INFO:Set up label encoding.
2024-03-12 00:09:49,403:INFO:Set up simple imputation.
2024-03-12 00:09:49,405:INFO:Set up encoding of categorical features.
2024-03-12 00:09:49,483:INFO:Finished creating preprocessing pipeline.
2024-03-12 00:09:49,487:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\macks\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['legs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['animal_name'],
                                    transformer=TargetEncoder(cols=['animal_name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-03-12 00:09:49,487:INFO:Creating final display dataframe.
2024-03-12 00:09:49,646:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      3080
1                        Target                                class_type
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                 (276, 18)
5        Transformed data shape                                 (276, 24)
6   Transformed train set shape                                 (220, 24)
7    Transformed test set shape                                  (56, 24)
8              Numeric features                                         1
9          Categorical features                                         2
10                   Preprocess                                      True
11              Imputation type                                    simple
12           Numeric imputation                                      mean
13       Categorical imputation                                      mode
14     Maximum one-hot encoding                                        25
15              Encoding method                                      None
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      591f
2024-03-12 00:09:49,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,739:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-12 00:09:49,743:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-12 00:09:49,744:INFO:setup() successfully completed in 1.12s...............
2024-03-12 00:10:00,638:INFO:Initializing compare_models()
2024-03-12 00:10:00,638:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-03-12 00:10:00,638:INFO:Checking exceptions
2024-03-12 00:10:00,644:INFO:Preparing display monitor
2024-03-12 00:10:00,660:INFO:Initializing Logistic Regression
2024-03-12 00:10:00,661:INFO:Total runtime is 1.6844272613525392e-05 minutes
2024-03-12 00:10:00,664:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:00,664:INFO:Initializing create_model()
2024-03-12 00:10:00,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:00,664:INFO:Checking exceptions
2024-03-12 00:10:00,664:INFO:Importing libraries
2024-03-12 00:10:00,664:INFO:Copying training dataset
2024-03-12 00:10:00,668:INFO:Defining folds
2024-03-12 00:10:00,668:INFO:Declaring metric variables
2024-03-12 00:10:00,671:INFO:Importing untrained model
2024-03-12 00:10:00,673:INFO:Logistic Regression Imported successfully
2024-03-12 00:10:00,678:INFO:Starting cross validation
2024-03-12 00:10:00,679:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:00,695:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:07,252:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,252:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,253:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,254:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,254:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,254:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,255:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,255:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,257:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,257:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,257:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,257:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,257:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,257:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,257:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,258:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,258:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,258:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,258:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,258:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,258:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

lt))

2024-03-12 00:10:07,258:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,258:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,260:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,260:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,260:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,260:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,260:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,260:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,260:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,260:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,261:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,261:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,261:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,261:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,261:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,262:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,262:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,262:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,262:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,262:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,262:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,262:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,263:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,263:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,264:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,265:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,265:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,265:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,267:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,281:INFO:Calculating mean and std
2024-03-12 00:10:07,283:INFO:Creating metrics dataframe
2024-03-12 00:10:07,285:INFO:Uploading results into container
2024-03-12 00:10:07,286:INFO:Uploading model into container now
2024-03-12 00:10:07,286:INFO:_master_model_container: 1
2024-03-12 00:10:07,286:INFO:_display_container: 2
2024-03-12 00:10:07,287:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-12 00:10:07,287:INFO:create_model() successfully completed......................................
2024-03-12 00:10:07,480:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:07,480:INFO:Creating metrics dataframe
2024-03-12 00:10:07,485:INFO:Initializing K Neighbors Classifier
2024-03-12 00:10:07,485:INFO:Total runtime is 0.1137462337811788 minutes
2024-03-12 00:10:07,488:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:07,488:INFO:Initializing create_model()
2024-03-12 00:10:07,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:07,489:INFO:Checking exceptions
2024-03-12 00:10:07,489:INFO:Importing libraries
2024-03-12 00:10:07,489:INFO:Copying training dataset
2024-03-12 00:10:07,492:INFO:Defining folds
2024-03-12 00:10:07,492:INFO:Declaring metric variables
2024-03-12 00:10:07,495:INFO:Importing untrained model
2024-03-12 00:10:07,498:INFO:K Neighbors Classifier Imported successfully
2024-03-12 00:10:07,504:INFO:Starting cross validation
2024-03-12 00:10:07,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:07,508:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:07,746:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,746:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,747:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,747:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:07,748:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,748:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,748:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,749:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,749:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,750:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,751:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,751:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,751:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,751:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,752:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,752:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,752:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:07,753:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,754:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:07,754:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,533:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,534:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,534:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,536:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,536:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,536:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,538:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,538:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,538:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,539:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,539:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,539:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,539:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,548:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,548:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,552:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,553:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,553:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,554:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,555:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,555:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,556:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,556:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,557:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,557:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,558:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,569:INFO:Calculating mean and std
2024-03-12 00:10:12,570:INFO:Creating metrics dataframe
2024-03-12 00:10:12,574:INFO:Uploading results into container
2024-03-12 00:10:12,575:INFO:Uploading model into container now
2024-03-12 00:10:12,576:INFO:_master_model_container: 2
2024-03-12 00:10:12,576:INFO:_display_container: 2
2024-03-12 00:10:12,576:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-03-12 00:10:12,576:INFO:create_model() successfully completed......................................
2024-03-12 00:10:12,730:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:12,730:INFO:Creating metrics dataframe
2024-03-12 00:10:12,736:INFO:Initializing Naive Bayes
2024-03-12 00:10:12,737:INFO:Total runtime is 0.2012805660565694 minutes
2024-03-12 00:10:12,738:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:12,739:INFO:Initializing create_model()
2024-03-12 00:10:12,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:12,739:INFO:Checking exceptions
2024-03-12 00:10:12,739:INFO:Importing libraries
2024-03-12 00:10:12,739:INFO:Copying training dataset
2024-03-12 00:10:12,742:INFO:Defining folds
2024-03-12 00:10:12,742:INFO:Declaring metric variables
2024-03-12 00:10:12,745:INFO:Importing untrained model
2024-03-12 00:10:12,749:INFO:Naive Bayes Imported successfully
2024-03-12 00:10:12,753:INFO:Starting cross validation
2024-03-12 00:10:12,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:12,756:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:12,841:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,842:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,842:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,843:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,843:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,844:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,844:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,844:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,844:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,845:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,845:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,846:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,846:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,846:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,846:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,846:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,846:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,847:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,847:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,847:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,847:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,847:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,848:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,848:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,849:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,849:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,849:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,849:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,849:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,850:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,850:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,851:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,851:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,851:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,851:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,851:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,851:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,852:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,852:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,852:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,852:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,853:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,853:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,853:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,853:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,854:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,854:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

rage, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,855:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,855:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,855:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,855:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:12,855:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,856:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,856:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,856:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,856:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:12,857:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,858:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,858:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:12,869:INFO:Calculating mean and std
2024-03-12 00:10:12,869:INFO:Creating metrics dataframe
2024-03-12 00:10:12,871:INFO:Uploading results into container
2024-03-12 00:10:12,871:INFO:Uploading model into container now
2024-03-12 00:10:12,872:INFO:_master_model_container: 3
2024-03-12 00:10:12,872:INFO:_display_container: 2
2024-03-12 00:10:12,872:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-03-12 00:10:12,872:INFO:create_model() successfully completed......................................
2024-03-12 00:10:13,015:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:13,015:INFO:Creating metrics dataframe
2024-03-12 00:10:13,022:INFO:Initializing Decision Tree Classifier
2024-03-12 00:10:13,022:INFO:Total runtime is 0.20602675676345825 minutes
2024-03-12 00:10:13,024:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:13,025:INFO:Initializing create_model()
2024-03-12 00:10:13,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:13,025:INFO:Checking exceptions
2024-03-12 00:10:13,025:INFO:Importing libraries
2024-03-12 00:10:13,025:INFO:Copying training dataset
2024-03-12 00:10:13,029:INFO:Defining folds
2024-03-12 00:10:13,029:INFO:Declaring metric variables
2024-03-12 00:10:13,032:INFO:Importing untrained model
2024-03-12 00:10:13,035:INFO:Decision Tree Classifier Imported successfully
2024-03-12 00:10:13,041:INFO:Starting cross validation
2024-03-12 00:10:13,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:13,044:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:13,140:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,141:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,142:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,142:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,142:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,142:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,144:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,145:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,145:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,145:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,145:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,145:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,146:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,146:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,146:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,146:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,146:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,146:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,146:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,147:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,147:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,147:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,147:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,147:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,148:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,148:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,148:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,148:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,148:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,149:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,149:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,150:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,150:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,150:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,150:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,150:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,151:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,151:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,151:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,151:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,152:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,152:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,152:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,152:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,152:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:13,153:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,153:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,153:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,153:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,154:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,154:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,154:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,154:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,155:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,156:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,156:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,156:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,157:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,157:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,158:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,158:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,158:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,168:INFO:Calculating mean and std
2024-03-12 00:10:13,169:INFO:Creating metrics dataframe
2024-03-12 00:10:13,171:INFO:Uploading results into container
2024-03-12 00:10:13,171:INFO:Uploading model into container now
2024-03-12 00:10:13,171:INFO:_master_model_container: 4
2024-03-12 00:10:13,171:INFO:_display_container: 2
2024-03-12 00:10:13,172:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best')
2024-03-12 00:10:13,172:INFO:create_model() successfully completed......................................
2024-03-12 00:10:13,316:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:13,316:INFO:Creating metrics dataframe
2024-03-12 00:10:13,321:INFO:Initializing SVM - Linear Kernel
2024-03-12 00:10:13,321:INFO:Total runtime is 0.21102166970570882 minutes
2024-03-12 00:10:13,324:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:13,324:INFO:Initializing create_model()
2024-03-12 00:10:13,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:13,324:INFO:Checking exceptions
2024-03-12 00:10:13,324:INFO:Importing libraries
2024-03-12 00:10:13,324:INFO:Copying training dataset
2024-03-12 00:10:13,328:INFO:Defining folds
2024-03-12 00:10:13,328:INFO:Declaring metric variables
2024-03-12 00:10:13,331:INFO:Importing untrained model
2024-03-12 00:10:13,333:INFO:SVM - Linear Kernel Imported successfully
2024-03-12 00:10:13,338:INFO:Starting cross validation
2024-03-12 00:10:13,340:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:13,342:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:13,482:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,482:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,482:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,482:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,484:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,484:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,484:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,485:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,486:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,486:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,486:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,486:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,487:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,487:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,487:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,487:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,487:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,488:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,488:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,488:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,489:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,489:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,489:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,491:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,491:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,491:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,491:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,492:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,492:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,492:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,492:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,493:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,493:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,493:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,493:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,494:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,495:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,495:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,495:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,496:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,496:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,496:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,497:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,497:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,498:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,498:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,499:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,499:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,500:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,502:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,511:INFO:Calculating mean and std
2024-03-12 00:10:13,512:INFO:Creating metrics dataframe
2024-03-12 00:10:13,513:INFO:Uploading results into container
2024-03-12 00:10:13,514:INFO:Uploading model into container now
2024-03-12 00:10:13,514:INFO:_master_model_container: 5
2024-03-12 00:10:13,514:INFO:_display_container: 2
2024-03-12 00:10:13,515:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-03-12 00:10:13,515:INFO:create_model() successfully completed......................................
2024-03-12 00:10:13,645:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:13,645:INFO:Creating metrics dataframe
2024-03-12 00:10:13,650:INFO:Initializing Ridge Classifier
2024-03-12 00:10:13,650:INFO:Total runtime is 0.2165062427520752 minutes
2024-03-12 00:10:13,653:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:13,653:INFO:Initializing create_model()
2024-03-12 00:10:13,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:13,654:INFO:Checking exceptions
2024-03-12 00:10:13,654:INFO:Importing libraries
2024-03-12 00:10:13,654:INFO:Copying training dataset
2024-03-12 00:10:13,657:INFO:Defining folds
2024-03-12 00:10:13,657:INFO:Declaring metric variables
2024-03-12 00:10:13,660:INFO:Importing untrained model
2024-03-12 00:10:13,663:INFO:Ridge Classifier Imported successfully
2024-03-12 00:10:13,668:INFO:Starting cross validation
2024-03-12 00:10:13,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:13,671:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:13,768:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,769:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,770:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,770:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,770:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,771:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,771:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,771:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,771:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,772:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,772:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,772:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,772:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,772:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,773:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,773:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,773:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,773:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,773:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,774:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,774:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,774:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,774:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,774:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

m metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:10:13,774:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,774:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,774:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,775:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,775:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,775:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,775:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,775:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,775:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,775:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,775:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,775:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,777:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,777:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,777:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,777:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,778:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,778:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,778:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,778:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,778:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,779:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,779:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,779:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,779:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,779:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,779:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,779:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,780:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,780:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,780:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:13,781:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,781:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:13,790:INFO:Calculating mean and std
2024-03-12 00:10:13,791:INFO:Creating metrics dataframe
2024-03-12 00:10:13,792:INFO:Uploading results into container
2024-03-12 00:10:13,792:INFO:Uploading model into container now
2024-03-12 00:10:13,793:INFO:_master_model_container: 6
2024-03-12 00:10:13,793:INFO:_display_container: 2
2024-03-12 00:10:13,793:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001)
2024-03-12 00:10:13,794:INFO:create_model() successfully completed......................................
2024-03-12 00:10:13,925:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:13,925:INFO:Creating metrics dataframe
2024-03-12 00:10:13,932:INFO:Initializing Random Forest Classifier
2024-03-12 00:10:13,932:INFO:Total runtime is 0.22119631369908652 minutes
2024-03-12 00:10:13,935:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:13,935:INFO:Initializing create_model()
2024-03-12 00:10:13,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:13,935:INFO:Checking exceptions
2024-03-12 00:10:13,935:INFO:Importing libraries
2024-03-12 00:10:13,935:INFO:Copying training dataset
2024-03-12 00:10:13,939:INFO:Defining folds
2024-03-12 00:10:13,939:INFO:Declaring metric variables
2024-03-12 00:10:13,940:INFO:Importing untrained model
2024-03-12 00:10:13,944:INFO:Random Forest Classifier Imported successfully
2024-03-12 00:10:13,949:INFO:Starting cross validation
2024-03-12 00:10:13,951:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:13,952:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:14,227:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,230:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,230:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,232:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,232:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,233:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,234:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,234:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,235:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,235:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,236:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,236:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,236:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,236:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,236:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,236:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,238:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,238:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,238:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,238:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,239:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,239:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,239:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,239:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,239:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,240:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,240:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,240:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,240:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,241:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,241:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,241:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,241:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,242:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,242:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,242:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,242:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,242:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,242:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,242:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,242:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,244:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

rage, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,247:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,247:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,247:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,247:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,248:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,249:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,253:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,254:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,268:INFO:Calculating mean and std
2024-03-12 00:10:14,268:INFO:Creating metrics dataframe
2024-03-12 00:10:14,270:INFO:Uploading results into container
2024-03-12 00:10:14,271:INFO:Uploading model into container now
2024-03-12 00:10:14,271:INFO:_master_model_container: 7
2024-03-12 00:10:14,271:INFO:_display_container: 2
2024-03-12 00:10:14,271:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False)
2024-03-12 00:10:14,272:INFO:create_model() successfully completed......................................
2024-03-12 00:10:14,423:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:14,423:INFO:Creating metrics dataframe
2024-03-12 00:10:14,430:INFO:Initializing Quadratic Discriminant Analysis
2024-03-12 00:10:14,430:INFO:Total runtime is 0.22950978676478068 minutes
2024-03-12 00:10:14,434:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:14,434:INFO:Initializing create_model()
2024-03-12 00:10:14,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:14,434:INFO:Checking exceptions
2024-03-12 00:10:14,434:INFO:Importing libraries
2024-03-12 00:10:14,434:INFO:Copying training dataset
2024-03-12 00:10:14,438:INFO:Defining folds
2024-03-12 00:10:14,438:INFO:Declaring metric variables
2024-03-12 00:10:14,441:INFO:Importing untrained model
2024-03-12 00:10:14,445:INFO:Quadratic Discriminant Analysis Imported successfully
2024-03-12 00:10:14,451:INFO:Starting cross validation
2024-03-12 00:10:14,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:14,456:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:14,592:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-12 00:10:14,592:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-12 00:10:14,592:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-12 00:10:14,592:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-12 00:10:14,592:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-12 00:10:14,592:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-12 00:10:14,593:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-12 00:10:14,593:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-12 00:10:14,593:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-12 00:10:14,614:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,614:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,614:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,614:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-12 00:10:14,615:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-12 00:10:14,616:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,616:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,616:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,616:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-12 00:10:14,616:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,616:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

 self.scalings_])

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

 self.scalings_])

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-12 00:10:14,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,618:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,618:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,618:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,618:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-12 00:10:14,618:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,618:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-12 00:10:14,618:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,618:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-12 00:10:14,618:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,619:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,619:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

 in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,619:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,619:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,619:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,620:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,620:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,620:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,624:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,624:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,624:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,624:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,624:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,626:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,626:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,626:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,627:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,628:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,629:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,639:INFO:Calculating mean and std
2024-03-12 00:10:14,639:INFO:Creating metrics dataframe
2024-03-12 00:10:14,641:INFO:Uploading results into container
2024-03-12 00:10:14,641:INFO:Uploading model into container now
2024-03-12 00:10:14,641:INFO:_master_model_container: 8
2024-03-12 00:10:14,642:INFO:_display_container: 2
2024-03-12 00:10:14,642:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-03-12 00:10:14,642:INFO:create_model() successfully completed......................................
2024-03-12 00:10:14,771:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:14,771:INFO:Creating metrics dataframe
2024-03-12 00:10:14,778:INFO:Initializing Ada Boost Classifier
2024-03-12 00:10:14,778:INFO:Total runtime is 0.23529672622680664 minutes
2024-03-12 00:10:14,780:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:14,781:INFO:Initializing create_model()
2024-03-12 00:10:14,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:14,781:INFO:Checking exceptions
2024-03-12 00:10:14,781:INFO:Importing libraries
2024-03-12 00:10:14,781:INFO:Copying training dataset
2024-03-12 00:10:14,785:INFO:Defining folds
2024-03-12 00:10:14,785:INFO:Declaring metric variables
2024-03-12 00:10:14,787:INFO:Importing untrained model
2024-03-12 00:10:14,790:INFO:Ada Boost Classifier Imported successfully
2024-03-12 00:10:14,793:INFO:Starting cross validation
2024-03-12 00:10:14,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:14,798:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:14,844:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,845:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,851:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,852:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,853:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,855:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,856:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,857:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,858:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,864:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-12 00:10:14,937:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,938:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,938:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,939:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,940:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,940:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,942:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,944:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,945:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,947:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,947:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,947:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,948:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,948:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,948:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,949:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,949:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,949:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

 in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,950:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,950:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,951:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,951:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,951:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,952:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,952:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,952:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,952:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,952:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,954:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,954:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,954:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,955:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,955:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,955:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,956:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,956:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,956:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,956:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,957:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,957:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,957:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,958:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,958:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,958:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,958:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,959:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,960:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,960:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,962:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,962:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:14,963:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,963:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,963:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,964:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,964:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,965:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,966:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,966:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,967:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,967:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:14,968:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:14,980:INFO:Calculating mean and std
2024-03-12 00:10:14,981:INFO:Creating metrics dataframe
2024-03-12 00:10:14,982:INFO:Uploading results into container
2024-03-12 00:10:14,983:INFO:Uploading model into container now
2024-03-12 00:10:14,983:INFO:_master_model_container: 9
2024-03-12 00:10:14,983:INFO:_display_container: 2
2024-03-12 00:10:14,983:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3080)
2024-03-12 00:10:14,984:INFO:create_model() successfully completed......................................
2024-03-12 00:10:15,115:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:15,115:INFO:Creating metrics dataframe
2024-03-12 00:10:15,122:INFO:Initializing Gradient Boosting Classifier
2024-03-12 00:10:15,122:INFO:Total runtime is 0.2410295883814494 minutes
2024-03-12 00:10:15,124:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:15,124:INFO:Initializing create_model()
2024-03-12 00:10:15,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:15,125:INFO:Checking exceptions
2024-03-12 00:10:15,125:INFO:Importing libraries
2024-03-12 00:10:15,125:INFO:Copying training dataset
2024-03-12 00:10:15,128:INFO:Defining folds
2024-03-12 00:10:15,128:INFO:Declaring metric variables
2024-03-12 00:10:15,131:INFO:Importing untrained model
2024-03-12 00:10:15,134:INFO:Gradient Boosting Classifier Imported successfully
2024-03-12 00:10:15,137:INFO:Starting cross validation
2024-03-12 00:10:15,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:15,141:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:15,617:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,619:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,619:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,621:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,622:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,623:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,624:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,632:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,634:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,635:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,636:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,637:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,637:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,638:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,638:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,638:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,639:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,639:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,639:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,640:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,640:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,640:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,640:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,641:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,641:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,641:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,642:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,642:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,642:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,642:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,642:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,643:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,643:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,644:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,644:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,644:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,644:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,644:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,645:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,645:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,645:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,646:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,646:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,646:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,646:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,647:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,647:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,648:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,648:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,648:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,648:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,649:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,649:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,650:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,650:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,651:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,652:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,655:INFO:Calculating mean and std
2024-03-12 00:10:15,655:INFO:Creating metrics dataframe
2024-03-12 00:10:15,657:INFO:Uploading results into container
2024-03-12 00:10:15,657:INFO:Uploading model into container now
2024-03-12 00:10:15,657:INFO:_master_model_container: 10
2024-03-12 00:10:15,658:INFO:_display_container: 2
2024-03-12 00:10:15,658:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-03-12 00:10:15,658:INFO:create_model() successfully completed......................................
2024-03-12 00:10:15,790:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:15,790:INFO:Creating metrics dataframe
2024-03-12 00:10:15,798:INFO:Initializing Linear Discriminant Analysis
2024-03-12 00:10:15,798:INFO:Total runtime is 0.25229445298512776 minutes
2024-03-12 00:10:15,800:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:15,801:INFO:Initializing create_model()
2024-03-12 00:10:15,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:15,801:INFO:Checking exceptions
2024-03-12 00:10:15,801:INFO:Importing libraries
2024-03-12 00:10:15,801:INFO:Copying training dataset
2024-03-12 00:10:15,804:INFO:Defining folds
2024-03-12 00:10:15,805:INFO:Declaring metric variables
2024-03-12 00:10:15,807:INFO:Importing untrained model
2024-03-12 00:10:15,809:INFO:Linear Discriminant Analysis Imported successfully
2024-03-12 00:10:15,813:INFO:Starting cross validation
2024-03-12 00:10:15,814:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:15,816:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:15,895:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,896:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,896:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,897:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,897:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,897:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,898:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,898:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,898:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,899:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,899:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,899:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,899:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,899:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,900:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,900:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,900:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,900:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,901:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,901:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,901:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,901:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,902:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,902:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,902:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,902:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,902:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,902:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,902:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,902:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,903:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,903:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,903:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,903:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,903:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,903:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,903:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,904:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,904:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,904:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,904:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,904:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,904:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,904:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,904:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,906:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,906:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,906:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,906:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,907:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,907:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,907:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,908:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,908:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:15,908:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,908:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,909:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,909:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,911:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,911:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:15,912:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:15,916:INFO:Calculating mean and std
2024-03-12 00:10:15,917:INFO:Creating metrics dataframe
2024-03-12 00:10:15,919:INFO:Uploading results into container
2024-03-12 00:10:15,919:INFO:Uploading model into container now
2024-03-12 00:10:15,919:INFO:_master_model_container: 11
2024-03-12 00:10:15,919:INFO:_display_container: 2
2024-03-12 00:10:15,920:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-03-12 00:10:15,920:INFO:create_model() successfully completed......................................
2024-03-12 00:10:16,050:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:16,050:INFO:Creating metrics dataframe
2024-03-12 00:10:16,056:INFO:Initializing Extra Trees Classifier
2024-03-12 00:10:16,056:INFO:Total runtime is 0.25660136143366497 minutes
2024-03-12 00:10:16,058:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:16,059:INFO:Initializing create_model()
2024-03-12 00:10:16,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:16,059:INFO:Checking exceptions
2024-03-12 00:10:16,059:INFO:Importing libraries
2024-03-12 00:10:16,059:INFO:Copying training dataset
2024-03-12 00:10:16,063:INFO:Defining folds
2024-03-12 00:10:16,063:INFO:Declaring metric variables
2024-03-12 00:10:16,066:INFO:Importing untrained model
2024-03-12 00:10:16,069:INFO:Extra Trees Classifier Imported successfully
2024-03-12 00:10:16,074:INFO:Starting cross validation
2024-03-12 00:10:16,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:16,081:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:16,316:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:16,319:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,319:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:16,319:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,321:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,321:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,322:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,322:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,323:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:16,323:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:16,323:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,324:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,325:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,325:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,325:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,326:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,326:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,326:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,327:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,328:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,328:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,329:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,329:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:16,329:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:16,330:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,330:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,331:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,331:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,332:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,333:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:16,333:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,333:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,333:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:16,333:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:16,334:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,334:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,334:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,335:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,335:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,335:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,335:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,335:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,335:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,336:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,336:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,336:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,336:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,337:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,337:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,337:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,337:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,337:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,338:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,338:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,338:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,338:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,338:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,338:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:16,339:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:16,348:INFO:Calculating mean and std
2024-03-12 00:10:16,349:INFO:Creating metrics dataframe
2024-03-12 00:10:16,351:INFO:Uploading results into container
2024-03-12 00:10:16,351:INFO:Uploading model into container now
2024-03-12 00:10:16,351:INFO:_master_model_container: 12
2024-03-12 00:10:16,351:INFO:_display_container: 2
2024-03-12 00:10:16,352:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3080, verbose=0,
                     warm_start=False)
2024-03-12 00:10:16,352:INFO:create_model() successfully completed......................................
2024-03-12 00:10:16,482:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:16,483:INFO:Creating metrics dataframe
2024-03-12 00:10:16,489:INFO:Initializing Light Gradient Boosting Machine
2024-03-12 00:10:16,490:INFO:Total runtime is 0.2638313452402751 minutes
2024-03-12 00:10:16,492:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:16,492:INFO:Initializing create_model()
2024-03-12 00:10:16,492:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:16,492:INFO:Checking exceptions
2024-03-12 00:10:16,492:INFO:Importing libraries
2024-03-12 00:10:16,492:INFO:Copying training dataset
2024-03-12 00:10:16,495:INFO:Defining folds
2024-03-12 00:10:16,496:INFO:Declaring metric variables
2024-03-12 00:10:16,498:INFO:Importing untrained model
2024-03-12 00:10:16,501:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-12 00:10:16,505:INFO:Starting cross validation
2024-03-12 00:10:16,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:16,508:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:17,451:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,452:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,454:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,455:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,455:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,456:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,457:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,458:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,458:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,458:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,458:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,460:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,461:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,462:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,514:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,517:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,519:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,521:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,522:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,523:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,523:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,524:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

rage, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,525:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,528:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,529:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,532:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,534:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,571:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,573:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,575:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,576:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,577:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,579:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,589:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,592:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,593:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,595:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,597:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,599:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,600:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,625:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,629:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,636:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,638:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,639:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,651:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,652:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,653:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,654:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,656:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,657:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,658:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,670:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,672:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,673:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,674:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,675:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,679:INFO:Calculating mean and std
2024-03-12 00:10:17,681:INFO:Creating metrics dataframe
2024-03-12 00:10:17,685:INFO:Uploading results into container
2024-03-12 00:10:17,686:INFO:Uploading model into container now
2024-03-12 00:10:17,686:INFO:_master_model_container: 13
2024-03-12 00:10:17,687:INFO:_display_container: 2
2024-03-12 00:10:17,687:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3080, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-03-12 00:10:17,687:INFO:create_model() successfully completed......................................
2024-03-12 00:10:17,864:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:17,864:INFO:Creating metrics dataframe
2024-03-12 00:10:17,870:INFO:Initializing Dummy Classifier
2024-03-12 00:10:17,870:INFO:Total runtime is 0.2868347485860189 minutes
2024-03-12 00:10:17,872:INFO:SubProcess create_model() called ==================================
2024-03-12 00:10:17,873:INFO:Initializing create_model()
2024-03-12 00:10:17,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B33F090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:17,873:INFO:Checking exceptions
2024-03-12 00:10:17,873:INFO:Importing libraries
2024-03-12 00:10:17,873:INFO:Copying training dataset
2024-03-12 00:10:17,876:INFO:Defining folds
2024-03-12 00:10:17,876:INFO:Declaring metric variables
2024-03-12 00:10:17,880:INFO:Importing untrained model
2024-03-12 00:10:17,883:INFO:Dummy Classifier Imported successfully
2024-03-12 00:10:17,887:INFO:Starting cross validation
2024-03-12 00:10:17,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:10:17,890:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:10:17,955:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,955:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,956:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,957:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,957:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,959:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,959:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,959:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,960:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,962:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

 in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,962:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,962:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,962:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,962:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,963:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,963:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,963:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,964:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,964:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,964:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,965:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,965:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,965:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,965:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,966:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,966:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,966:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,966:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,966:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,966:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,967:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,967:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,967:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,967:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,967:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,967:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,967:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,968:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,968:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,969:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,969:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,970:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

t))

2024-03-12 00:10:17,971:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,971:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,971:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,972:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:10:17,972:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,972:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,973:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,973:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,973:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,974:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,974:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,974:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,975:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,975:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:10:17,975:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,975:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:10:17,989:INFO:Calculating mean and std
2024-03-12 00:10:17,990:INFO:Creating metrics dataframe
2024-03-12 00:10:17,992:INFO:Uploading results into container
2024-03-12 00:10:17,993:INFO:Uploading model into container now
2024-03-12 00:10:17,994:INFO:_master_model_container: 14
2024-03-12 00:10:17,994:INFO:_display_container: 2
2024-03-12 00:10:17,994:INFO:DummyClassifier(constant=None, random_state=3080, strategy='prior')
2024-03-12 00:10:17,994:INFO:create_model() successfully completed......................................
2024-03-12 00:10:18,128:INFO:SubProcess create_model() end ==================================
2024-03-12 00:10:18,128:INFO:Creating metrics dataframe
2024-03-12 00:10:18,140:INFO:Initializing create_model()
2024-03-12 00:10:18,141:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:10:18,141:INFO:Checking exceptions
2024-03-12 00:10:18,142:INFO:Importing libraries
2024-03-12 00:10:18,142:INFO:Copying training dataset
2024-03-12 00:10:18,146:INFO:Defining folds
2024-03-12 00:10:18,146:INFO:Declaring metric variables
2024-03-12 00:10:18,146:INFO:Importing untrained model
2024-03-12 00:10:18,146:INFO:Declaring custom model
2024-03-12 00:10:18,146:INFO:Ridge Classifier Imported successfully
2024-03-12 00:10:18,147:INFO:Cross validation set to False
2024-03-12 00:10:18,147:INFO:Fitting Model
2024-03-12 00:10:18,198:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001)
2024-03-12 00:10:18,198:INFO:create_model() successfully completed......................................
2024-03-12 00:10:18,402:INFO:_master_model_container: 14
2024-03-12 00:10:18,402:INFO:_display_container: 2
2024-03-12 00:10:18,402:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001)
2024-03-12 00:10:18,403:INFO:compare_models() successfully completed......................................
2024-03-12 00:15:31,712:INFO:Initializing finalize_model()
2024-03-12 00:15:31,713:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-03-12 00:15:31,713:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001)
2024-03-12 00:15:31,716:INFO:Initializing create_model()
2024-03-12 00:15:31,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:15:31,717:INFO:Checking exceptions
2024-03-12 00:15:31,719:INFO:Importing libraries
2024-03-12 00:15:31,719:INFO:Copying training dataset
2024-03-12 00:15:31,719:INFO:Defining folds
2024-03-12 00:15:31,719:INFO:Declaring metric variables
2024-03-12 00:15:31,719:INFO:Importing untrained model
2024-03-12 00:15:31,719:INFO:Declaring custom model
2024-03-12 00:15:31,720:INFO:Ridge Classifier Imported successfully
2024-03-12 00:15:31,720:INFO:Cross validation set to False
2024-03-12 00:15:31,721:INFO:Fitting Model
2024-03-12 00:15:31,758:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['legs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'...
                                    transformer=TargetEncoder(cols=['animal_name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=3080,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2024-03-12 00:15:31,758:INFO:create_model() successfully completed......................................
2024-03-12 00:15:31,949:INFO:_master_model_container: 14
2024-03-12 00:15:31,949:INFO:_display_container: 2
2024-03-12 00:15:31,954:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['legs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'...
                                    transformer=TargetEncoder(cols=['animal_name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=3080,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2024-03-12 00:15:31,954:INFO:finalize_model() successfully completed......................................
2024-03-12 00:15:35,068:INFO:Initializing evaluate_model()
2024-03-12 00:15:35,068:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-03-12 00:15:35,079:INFO:Initializing plot_model()
2024-03-12 00:15:35,079:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-12 00:15:35,079:INFO:Checking exceptions
2024-03-12 00:15:35,081:INFO:Preloading libraries
2024-03-12 00:15:35,082:INFO:Copying training dataset
2024-03-12 00:15:35,082:INFO:Plot type: pipeline
2024-03-12 00:15:35,240:INFO:Visual Rendered Successfully
2024-03-12 00:15:35,383:INFO:plot_model() successfully completed......................................
2024-03-12 00:15:37,257:INFO:Initializing predict_model()
2024-03-12 00:15:37,257:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C22B5FA5C0>)
2024-03-12 00:15:37,257:INFO:Checking exceptions
2024-03-12 00:15:37,257:INFO:Preloading libraries
2024-03-12 00:15:37,355:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_ranking.py", line 706, in _multiclass_roc_auc_score
    if not np.allclose(1, y_score.sum(axis=1)):
                          ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\numpy\core\_methods.py", line 49, in _sum
    return umr_sum(a, axis, dtype, out, keepdims, initial, where)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_ranking.py", line 706, in _multiclass_roc_auc_score
    if not np.allclose(1, y_score.sum(axis=1)):
                          ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\numpy\core\_methods.py", line 49, in _sum
    return umr_sum(a, axis, dtype, out, keepdims, initial, where)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(traceback.format_exc())

2024-03-12 00:15:37,358:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:37,360:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:37,361:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:43,590:INFO:Initializing ensemble_model()
2024-03-12 00:15:43,590:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-03-12 00:15:43,590:INFO:Checking exceptions
2024-03-12 00:15:43,603:INFO:Importing libraries
2024-03-12 00:15:43,603:INFO:Copying training dataset
2024-03-12 00:15:43,603:INFO:Checking base model
2024-03-12 00:15:43,603:INFO:Base model : Ridge Classifier
2024-03-12 00:15:43,607:INFO:Importing untrained ensembler
2024-03-12 00:15:43,609:INFO:Ensemble method set to Bagging
2024-03-12 00:15:43,609:INFO:SubProcess create_model() called ==================================
2024-03-12 00:15:43,609:INFO:Initializing create_model()
2024-03-12 00:15:43,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B505010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:15:43,609:INFO:Checking exceptions
2024-03-12 00:15:43,609:INFO:Importing libraries
2024-03-12 00:15:43,609:INFO:Copying training dataset
2024-03-12 00:15:43,613:INFO:Defining folds
2024-03-12 00:15:43,613:INFO:Declaring metric variables
2024-03-12 00:15:43,617:INFO:Importing untrained model
2024-03-12 00:15:43,617:INFO:Declaring custom model
2024-03-12 00:15:43,620:INFO:Ridge Classifier Imported successfully
2024-03-12 00:15:43,625:INFO:Starting cross validation
2024-03-12 00:15:43,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:15:43,629:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:15:49,654:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,654:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,654:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,654:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,655:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,656:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,656:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,656:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,656:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,658:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,658:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,658:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,658:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,660:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,660:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,660:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,661:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,661:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,661:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,661:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,661:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:15:49,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

rage, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,670:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,671:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:15:49,672:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:15:49,682:INFO:Calculating mean and std
2024-03-12 00:15:49,683:INFO:Creating metrics dataframe
2024-03-12 00:15:49,689:INFO:Finalizing model
2024-03-12 00:15:49,789:INFO:Uploading results into container
2024-03-12 00:15:49,791:INFO:Uploading model into container now
2024-03-12 00:15:49,791:INFO:_master_model_container: 15
2024-03-12 00:15:49,792:INFO:_display_container: 4
2024-03-12 00:15:49,792:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False)
2024-03-12 00:15:49,792:INFO:create_model() successfully completed......................................
2024-03-12 00:15:49,966:INFO:SubProcess create_model() end ==================================
2024-03-12 00:15:49,975:INFO:_master_model_container: 15
2024-03-12 00:15:49,975:INFO:_display_container: 4
2024-03-12 00:15:49,975:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False)
2024-03-12 00:15:49,975:INFO:ensemble_model() successfully completed......................................
2024-03-12 00:15:57,038:INFO:Initializing evaluate_model()
2024-03-12 00:15:57,038:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-03-12 00:15:57,045:INFO:Initializing plot_model()
2024-03-12 00:15:57,045:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-12 00:15:57,045:INFO:Checking exceptions
2024-03-12 00:15:57,048:INFO:Preloading libraries
2024-03-12 00:15:57,048:INFO:Copying training dataset
2024-03-12 00:15:57,048:INFO:Plot type: pipeline
2024-03-12 00:15:57,130:INFO:Visual Rendered Successfully
2024-03-12 00:15:57,273:INFO:plot_model() successfully completed......................................
2024-03-12 00:15:58,951:INFO:Initializing tune_model()
2024-03-12 00:15:58,952:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-03-12 00:15:58,952:INFO:Checking exceptions
2024-03-12 00:15:58,964:INFO:Copying training dataset
2024-03-12 00:15:58,967:INFO:Checking base model
2024-03-12 00:15:58,968:INFO:Base model : Bagging Classifier
2024-03-12 00:15:58,970:INFO:Declaring metric variables
2024-03-12 00:15:58,972:INFO:Defining Hyperparameters
2024-03-12 00:15:59,134:INFO:Tuning with n_jobs=-1
2024-03-12 00:15:59,134:INFO:Initializing RandomizedSearchCV
2024-03-12 00:15:59,138:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:16:03,064:INFO:best_params: {'actual_estimator__max_samples': 1.0, 'actual_estimator__max_features': 0.9, 'actual_estimator__bootstrap_features': True, 'actual_estimator__bootstrap': False}
2024-03-12 00:16:03,065:INFO:Hyperparameter search completed
2024-03-12 00:16:03,065:INFO:SubProcess create_model() called ==================================
2024-03-12 00:16:03,066:INFO:Initializing create_model()
2024-03-12 00:16:03,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C2288C3910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_samples': 1.0, 'max_features': 0.9, 'bootstrap_features': True, 'bootstrap': False})
2024-03-12 00:16:03,066:INFO:Checking exceptions
2024-03-12 00:16:03,066:INFO:Importing libraries
2024-03-12 00:16:03,068:INFO:Copying training dataset
2024-03-12 00:16:03,075:INFO:Defining folds
2024-03-12 00:16:03,075:INFO:Declaring metric variables
2024-03-12 00:16:03,078:INFO:Importing untrained model
2024-03-12 00:16:03,079:INFO:Declaring custom model
2024-03-12 00:16:03,083:INFO:Ridge Classifier Imported successfully
2024-03-12 00:16:03,090:INFO:Starting cross validation
2024-03-12 00:16:03,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:16:03,096:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:16:03,205:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,205:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,206:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,206:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,206:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,207:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,207:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,208:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,208:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,208:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,208:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,208:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,209:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,209:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,209:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,209:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,209:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,209:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,209:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,210:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,210:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,210:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,210:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,211:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,212:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,212:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,212:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,213:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,213:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,213:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,214:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,214:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,215:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,216:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,216:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,216:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,216:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,217:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,217:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,218:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,218:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,219:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,219:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,219:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,219:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,221:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,221:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,221:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,222:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,222:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,222:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,223:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,223:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,223:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,223:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,224:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,224:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,224:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,225:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,231:INFO:Calculating mean and std
2024-03-12 00:16:03,232:INFO:Creating metrics dataframe
2024-03-12 00:16:03,236:INFO:Finalizing model
2024-03-12 00:16:03,285:INFO:Uploading results into container
2024-03-12 00:16:03,287:INFO:Uploading model into container now
2024-03-12 00:16:03,287:INFO:_master_model_container: 16
2024-03-12 00:16:03,287:INFO:_display_container: 5
2024-03-12 00:16:03,288:INFO:BaggingClassifier(bootstrap=False, bootstrap_features=True,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=0.9, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False)
2024-03-12 00:16:03,288:INFO:create_model() successfully completed......................................
2024-03-12 00:16:03,467:INFO:SubProcess create_model() end ==================================
2024-03-12 00:16:03,467:INFO:choose_better activated
2024-03-12 00:16:03,471:INFO:SubProcess create_model() called ==================================
2024-03-12 00:16:03,471:INFO:Initializing create_model()
2024-03-12 00:16:03,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:16:03,472:INFO:Checking exceptions
2024-03-12 00:16:03,473:INFO:Importing libraries
2024-03-12 00:16:03,474:INFO:Copying training dataset
2024-03-12 00:16:03,477:INFO:Defining folds
2024-03-12 00:16:03,477:INFO:Declaring metric variables
2024-03-12 00:16:03,477:INFO:Importing untrained model
2024-03-12 00:16:03,477:INFO:Declaring custom model
2024-03-12 00:16:03,478:INFO:Ridge Classifier Imported successfully
2024-03-12 00:16:03,478:INFO:Starting cross validation
2024-03-12 00:16:03,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:16:03,481:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:16:03,587:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,588:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,589:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,590:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,592:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,592:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,594:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,595:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,595:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,595:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,595:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,596:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,597:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,597:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,597:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,597:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,598:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,598:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,598:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,599:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,599:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,599:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,599:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,599:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,599:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,599:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,601:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,601:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,601:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,601:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,601:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,602:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,602:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:03,602:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,602:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,603:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,603:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,603:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,603:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,603:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,603:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,604:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,604:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,604:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,604:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,604:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,604:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,605:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,605:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,605:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,605:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,605:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,605:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,606:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,606:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,607:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,607:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,607:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,607:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,607:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:03,608:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:03,611:INFO:Calculating mean and std
2024-03-12 00:16:03,611:INFO:Creating metrics dataframe
2024-03-12 00:16:03,613:INFO:Finalizing model
2024-03-12 00:16:03,649:INFO:Uploading results into container
2024-03-12 00:16:03,650:INFO:Uploading model into container now
2024-03-12 00:16:03,650:INFO:_master_model_container: 17
2024-03-12 00:16:03,651:INFO:_display_container: 6
2024-03-12 00:16:03,651:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False)
2024-03-12 00:16:03,652:INFO:create_model() successfully completed......................................
2024-03-12 00:16:03,852:INFO:SubProcess create_model() end ==================================
2024-03-12 00:16:03,853:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False) result for Accuracy is 1.0
2024-03-12 00:16:03,853:INFO:BaggingClassifier(bootstrap=False, bootstrap_features=True,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=0.9, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False) result for Accuracy is 1.0
2024-03-12 00:16:03,854:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False) is best model
2024-03-12 00:16:03,854:INFO:choose_better completed
2024-03-12 00:16:03,854:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-03-12 00:16:03,861:INFO:_master_model_container: 17
2024-03-12 00:16:03,861:INFO:_display_container: 5
2024-03-12 00:16:03,862:INFO:BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False)
2024-03-12 00:16:03,862:INFO:tune_model() successfully completed......................................
2024-03-12 00:16:10,080:INFO:Initializing evaluate_model()
2024-03-12 00:16:10,080:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-03-12 00:16:10,091:INFO:Initializing plot_model()
2024-03-12 00:16:10,091:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-12 00:16:10,092:INFO:Checking exceptions
2024-03-12 00:16:10,094:INFO:Preloading libraries
2024-03-12 00:16:10,094:INFO:Copying training dataset
2024-03-12 00:16:10,094:INFO:Plot type: pipeline
2024-03-12 00:16:10,190:INFO:Visual Rendered Successfully
2024-03-12 00:16:10,328:INFO:plot_model() successfully completed......................................
2024-03-12 00:16:12,588:INFO:Initializing predict_model()
2024-03-12 00:16:12,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=BaggingClassifier(bootstrap=True, bootstrap_features=False,
                  estimator=RidgeClassifier(alpha=1.0, class_weight=None,
                                            copy_X=True, fit_intercept=True,
                                            max_iter=None, positive=False,
                                            random_state=3080, solver='auto',
                                            tol=0.0001),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=3080, verbose=0,
                  warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C22CF116C0>)
2024-03-12 00:16:12,589:INFO:Checking exceptions
2024-03-12 00:16:12,589:INFO:Preloading libraries
2024-03-12 00:16:12,686:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:12,688:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:12,689:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,291:INFO:Initializing create_model()
2024-03-12 00:16:52,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=dt, fold=20, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:16:52,292:INFO:Checking exceptions
2024-03-12 00:16:52,303:INFO:Importing libraries
2024-03-12 00:16:52,303:INFO:Copying training dataset
2024-03-12 00:16:52,306:INFO:Defining folds
2024-03-12 00:16:52,307:INFO:Declaring metric variables
2024-03-12 00:16:52,309:INFO:Importing untrained model
2024-03-12 00:16:52,311:INFO:Decision Tree Classifier Imported successfully
2024-03-12 00:16:52,318:INFO:Starting cross validation
2024-03-12 00:16:52,319:INFO:Cross validating with StratifiedKFold(n_splits=20, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:16:52,321:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=20.
  warnings.warn(

2024-03-12 00:16:52,428:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,430:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,431:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,432:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,433:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,434:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,435:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,436:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,437:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,438:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,438:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,438:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,439:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,440:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,441:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,441:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,442:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,445:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,447:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,448:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,448:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,449:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,450:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,452:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

t))

2024-03-12 00:16:52,454:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,455:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,455:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,457:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,459:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,461:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,462:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,462:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,463:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,463:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,464:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,464:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,465:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,465:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,465:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,466:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,467:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,467:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,467:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,468:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,469:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,469:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,470:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,471:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,471:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,471:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,471:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,473:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,473:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,474:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,475:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,475:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,476:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,477:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,477:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,478:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,478:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,478:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,479:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,479:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

rage, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,479:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,482:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,482:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,484:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,484:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,485:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,485:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,486:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,486:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,487:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,488:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,488:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,488:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,488:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,489:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,491:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,491:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,492:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,492:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,493:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,494:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,494:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,496:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,497:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,498:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,500:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,500:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,502:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,503:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,504:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,504:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,505:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,505:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,506:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,506:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,507:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,507:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,507:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,508:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,509:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,517:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,517:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,518:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,518:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,519:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,519:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,519:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,520:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,520:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,520:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,521:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,521:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,521:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,521:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,521:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,521:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,522:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,523:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,523:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,523:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,524:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,536:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:52,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,538:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,539:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,539:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:52,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:52,544:INFO:Calculating mean and std
2024-03-12 00:16:52,544:INFO:Creating metrics dataframe
2024-03-12 00:16:52,548:INFO:Finalizing model
2024-03-12 00:16:52,581:INFO:Uploading results into container
2024-03-12 00:16:52,582:INFO:Uploading model into container now
2024-03-12 00:16:52,591:INFO:_master_model_container: 18
2024-03-12 00:16:52,591:INFO:_display_container: 7
2024-03-12 00:16:52,591:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best')
2024-03-12 00:16:52,592:INFO:create_model() successfully completed......................................
2024-03-12 00:16:52,739:INFO:Initializing tune_model()
2024-03-12 00:16:52,739:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-03-12 00:16:52,739:INFO:Checking exceptions
2024-03-12 00:16:52,751:INFO:Copying training dataset
2024-03-12 00:16:52,754:INFO:Checking base model
2024-03-12 00:16:52,754:INFO:Base model : Decision Tree Classifier
2024-03-12 00:16:52,757:INFO:Declaring metric variables
2024-03-12 00:16:52,759:INFO:Defining Hyperparameters
2024-03-12 00:16:52,923:INFO:Tuning with n_jobs=-1
2024-03-12 00:16:52,924:INFO:Initializing RandomizedSearchCV
2024-03-12 00:16:52,926:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:16:53,556:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'gini'}
2024-03-12 00:16:53,556:INFO:Hyperparameter search completed
2024-03-12 00:16:53,556:INFO:SubProcess create_model() called ==================================
2024-03-12 00:16:53,556:INFO:Initializing create_model()
2024-03-12 00:16:53,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B507350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.3, 'max_features': 'log2', 'max_depth': 7, 'criterion': 'gini'})
2024-03-12 00:16:53,556:INFO:Checking exceptions
2024-03-12 00:16:53,556:INFO:Importing libraries
2024-03-12 00:16:53,556:INFO:Copying training dataset
2024-03-12 00:16:53,559:INFO:Defining folds
2024-03-12 00:16:53,559:INFO:Declaring metric variables
2024-03-12 00:16:53,562:INFO:Importing untrained model
2024-03-12 00:16:53,562:INFO:Declaring custom model
2024-03-12 00:16:53,565:INFO:Decision Tree Classifier Imported successfully
2024-03-12 00:16:53,572:INFO:Starting cross validation
2024-03-12 00:16:53,574:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:16:53,575:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:16:53,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,659:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,660:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

m metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,660:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,661:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,667:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

rage, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,670:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,670:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,670:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,671:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,672:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,672:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,673:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,674:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,674:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,675:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,679:INFO:Calculating mean and std
2024-03-12 00:16:53,679:INFO:Creating metrics dataframe
2024-03-12 00:16:53,683:INFO:Finalizing model
2024-03-12 00:16:53,711:INFO:Uploading results into container
2024-03-12 00:16:53,712:INFO:Uploading model into container now
2024-03-12 00:16:53,713:INFO:_master_model_container: 19
2024-03-12 00:16:53,713:INFO:_display_container: 8
2024-03-12 00:16:53,713:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=7, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.3, min_samples_leaf=3,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best')
2024-03-12 00:16:53,713:INFO:create_model() successfully completed......................................
2024-03-12 00:16:53,851:INFO:SubProcess create_model() end ==================================
2024-03-12 00:16:53,852:INFO:choose_better activated
2024-03-12 00:16:53,854:INFO:SubProcess create_model() called ==================================
2024-03-12 00:16:53,854:INFO:Initializing create_model()
2024-03-12 00:16:53,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:16:53,854:INFO:Checking exceptions
2024-03-12 00:16:53,855:INFO:Importing libraries
2024-03-12 00:16:53,856:INFO:Copying training dataset
2024-03-12 00:16:53,858:INFO:Defining folds
2024-03-12 00:16:53,858:INFO:Declaring metric variables
2024-03-12 00:16:53,858:INFO:Importing untrained model
2024-03-12 00:16:53,858:INFO:Declaring custom model
2024-03-12 00:16:53,859:INFO:Decision Tree Classifier Imported successfully
2024-03-12 00:16:53,859:INFO:Starting cross validation
2024-03-12 00:16:53,859:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:16:53,861:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:16:53,922:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,923:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,923:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,923:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,924:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,924:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,924:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,925:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,925:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,926:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,926:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,927:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,927:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,929:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,929:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,930:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,930:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,930:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,931:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,931:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,932:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,933:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,934:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,935:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,935:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,936:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,936:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,936:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,936:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,938:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,938:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,939:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,939:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,939:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,939:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,939:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,939:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,940:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,940:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,940:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,941:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,941:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,941:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,942:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,942:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,942:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:16:53,942:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,942:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,942:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,942:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,943:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,943:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,943:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,943:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,943:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,945:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,945:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,945:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,946:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:16:53,946:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:16:53,959:INFO:Calculating mean and std
2024-03-12 00:16:53,960:INFO:Creating metrics dataframe
2024-03-12 00:16:53,961:INFO:Finalizing model
2024-03-12 00:16:53,984:INFO:Uploading results into container
2024-03-12 00:16:53,985:INFO:Uploading model into container now
2024-03-12 00:16:53,985:INFO:_master_model_container: 20
2024-03-12 00:16:53,985:INFO:_display_container: 9
2024-03-12 00:16:53,985:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best')
2024-03-12 00:16:53,985:INFO:create_model() successfully completed......................................
2024-03-12 00:16:54,115:INFO:SubProcess create_model() end ==================================
2024-03-12 00:16:54,115:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best') result for Accuracy is 0.2045
2024-03-12 00:16:54,116:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=7, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.3, min_samples_leaf=3,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best') result for Accuracy is 0.6727
2024-03-12 00:16:54,116:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=7, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.3, min_samples_leaf=3,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best') is best model
2024-03-12 00:16:54,116:INFO:choose_better completed
2024-03-12 00:16:54,122:INFO:_master_model_container: 20
2024-03-12 00:16:54,123:INFO:_display_container: 8
2024-03-12 00:16:54,123:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=7, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.3, min_samples_leaf=3,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3080, splitter='best')
2024-03-12 00:16:54,123:INFO:tune_model() successfully completed......................................
2024-03-12 00:17:03,557:INFO:Initializing create_model()
2024-03-12 00:17:03,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=rf, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:03,557:INFO:Checking exceptions
2024-03-12 00:17:03,568:INFO:Importing libraries
2024-03-12 00:17:03,568:INFO:Copying training dataset
2024-03-12 00:17:03,572:INFO:Defining folds
2024-03-12 00:17:03,572:INFO:Declaring metric variables
2024-03-12 00:17:03,574:INFO:Importing untrained model
2024-03-12 00:17:03,577:INFO:Random Forest Classifier Imported successfully
2024-03-12 00:17:03,581:INFO:Starting cross validation
2024-03-12 00:17:03,583:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:03,793:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:03,795:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,798:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,802:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,803:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:03,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:03,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:03,806:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,806:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,807:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,808:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,808:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,808:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,810:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,810:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,822:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:03,823:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,824:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,825:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:03,837:INFO:Calculating mean and std
2024-03-12 00:17:03,837:INFO:Creating metrics dataframe
2024-03-12 00:17:03,841:INFO:Finalizing model
2024-03-12 00:17:03,965:INFO:Uploading results into container
2024-03-12 00:17:03,966:INFO:Uploading model into container now
2024-03-12 00:17:03,973:INFO:_master_model_container: 21
2024-03-12 00:17:03,973:INFO:_display_container: 9
2024-03-12 00:17:03,973:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False)
2024-03-12 00:17:03,973:INFO:create_model() successfully completed......................................
2024-03-12 00:17:04,113:INFO:Initializing tune_model()
2024-03-12 00:17:04,113:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-03-12 00:17:04,113:INFO:Checking exceptions
2024-03-12 00:17:04,122:INFO:Copying training dataset
2024-03-12 00:17:04,125:INFO:Checking base model
2024-03-12 00:17:04,125:INFO:Base model : Random Forest Classifier
2024-03-12 00:17:04,128:INFO:Declaring metric variables
2024-03-12 00:17:04,130:INFO:Defining Hyperparameters
2024-03-12 00:17:04,284:INFO:Tuning with n_jobs=-1
2024-03-12 00:17:04,284:INFO:Initializing RandomizedSearchCV
2024-03-12 00:17:04,287:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:06,793:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-03-12 00:17:06,794:INFO:Hyperparameter search completed
2024-03-12 00:17:06,794:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:06,794:INFO:Initializing create_model()
2024-03-12 00:17:06,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B58CC90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.002, 'max_features': 'sqrt', 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-03-12 00:17:06,795:INFO:Checking exceptions
2024-03-12 00:17:06,795:INFO:Importing libraries
2024-03-12 00:17:06,795:INFO:Copying training dataset
2024-03-12 00:17:06,799:INFO:Defining folds
2024-03-12 00:17:06,799:INFO:Declaring metric variables
2024-03-12 00:17:06,802:INFO:Importing untrained model
2024-03-12 00:17:06,802:INFO:Declaring custom model
2024-03-12 00:17:06,804:INFO:Random Forest Classifier Imported successfully
2024-03-12 00:17:06,808:INFO:Starting cross validation
2024-03-12 00:17:06,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:06,811:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:07,179:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,180:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,182:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,185:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,187:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,188:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,190:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,197:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,198:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,199:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,201:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,202:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,202:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,204:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,204:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,204:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,204:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,205:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,205:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,206:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,206:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,207:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,207:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,207:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,208:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,208:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,208:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,209:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,209:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,210:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,211:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,211:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,211:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,212:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,213:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,213:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,214:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,215:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,216:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,216:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,216:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,216:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,216:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,217:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,217:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,217:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,217:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,219:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,219:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,220:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,220:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,220:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,220:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,220:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,221:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,222:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,223:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,223:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,225:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,226:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,231:INFO:Calculating mean and std
2024-03-12 00:17:07,232:INFO:Creating metrics dataframe
2024-03-12 00:17:07,236:INFO:Finalizing model
2024-03-12 00:17:07,435:INFO:Uploading results into container
2024-03-12 00:17:07,435:INFO:Uploading model into container now
2024-03-12 00:17:07,436:INFO:_master_model_container: 22
2024-03-12 00:17:07,436:INFO:_display_container: 10
2024-03-12 00:17:07,436:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.002,
                       min_samples_leaf=2, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=3080, verbose=0, warm_start=False)
2024-03-12 00:17:07,436:INFO:create_model() successfully completed......................................
2024-03-12 00:17:07,573:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:07,573:INFO:choose_better activated
2024-03-12 00:17:07,576:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:07,576:INFO:Initializing create_model()
2024-03-12 00:17:07,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:07,578:INFO:Checking exceptions
2024-03-12 00:17:07,578:INFO:Importing libraries
2024-03-12 00:17:07,578:INFO:Copying training dataset
2024-03-12 00:17:07,581:INFO:Defining folds
2024-03-12 00:17:07,581:INFO:Declaring metric variables
2024-03-12 00:17:07,581:INFO:Importing untrained model
2024-03-12 00:17:07,581:INFO:Declaring custom model
2024-03-12 00:17:07,582:INFO:Random Forest Classifier Imported successfully
2024-03-12 00:17:07,582:INFO:Starting cross validation
2024-03-12 00:17:07,583:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:07,584:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:07,838:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,839:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,840:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,842:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,842:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,843:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,844:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,845:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,847:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,848:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,850:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,850:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,850:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,852:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,852:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,853:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,853:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,853:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,854:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,854:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,854:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,854:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,856:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,856:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,856:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,857:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,857:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,858:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,858:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,858:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,858:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,858:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,858:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:07,859:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,859:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,859:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,859:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,859:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,859:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,859:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,860:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,860:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,860:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,860:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,860:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,860:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,861:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,861:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,861:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,861:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,861:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,862:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,862:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,862:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,863:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,863:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,864:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:07,864:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,864:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:07,876:INFO:Calculating mean and std
2024-03-12 00:17:07,877:INFO:Creating metrics dataframe
2024-03-12 00:17:07,878:INFO:Finalizing model
2024-03-12 00:17:08,005:INFO:Uploading results into container
2024-03-12 00:17:08,006:INFO:Uploading model into container now
2024-03-12 00:17:08,006:INFO:_master_model_container: 23
2024-03-12 00:17:08,006:INFO:_display_container: 11
2024-03-12 00:17:08,007:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False)
2024-03-12 00:17:08,007:INFO:create_model() successfully completed......................................
2024-03-12 00:17:08,154:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:08,154:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False) result for Accuracy is 0.9955
2024-03-12 00:17:08,155:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.002,
                       min_samples_leaf=2, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=3080, verbose=0, warm_start=False) result for Accuracy is 1.0
2024-03-12 00:17:08,155:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.002,
                       min_samples_leaf=2, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=3080, verbose=0, warm_start=False) is best model
2024-03-12 00:17:08,155:INFO:choose_better completed
2024-03-12 00:17:08,162:INFO:_master_model_container: 23
2024-03-12 00:17:08,162:INFO:_display_container: 10
2024-03-12 00:17:08,163:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.002,
                       min_samples_leaf=2, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=3080, verbose=0, warm_start=False)
2024-03-12 00:17:08,163:INFO:tune_model() successfully completed......................................
2024-03-12 00:17:11,356:INFO:Initializing create_model()
2024-03-12 00:17:11,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=gbc, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:11,356:INFO:Checking exceptions
2024-03-12 00:17:11,366:INFO:Importing libraries
2024-03-12 00:17:11,366:INFO:Copying training dataset
2024-03-12 00:17:11,370:INFO:Defining folds
2024-03-12 00:17:11,370:INFO:Declaring metric variables
2024-03-12 00:17:11,373:INFO:Importing untrained model
2024-03-12 00:17:11,375:INFO:Gradient Boosting Classifier Imported successfully
2024-03-12 00:17:11,382:INFO:Starting cross validation
2024-03-12 00:17:11,383:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:11,734:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:11,735:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,737:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,739:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,747:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:11,747:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:11,748:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,751:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,751:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,752:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:11,752:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,753:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,755:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,756:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,770:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:11,771:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,771:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,772:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:11,783:INFO:Calculating mean and std
2024-03-12 00:17:11,784:INFO:Creating metrics dataframe
2024-03-12 00:17:11,787:INFO:Finalizing model
2024-03-12 00:17:12,058:INFO:Uploading results into container
2024-03-12 00:17:12,059:INFO:Uploading model into container now
2024-03-12 00:17:12,065:INFO:_master_model_container: 24
2024-03-12 00:17:12,065:INFO:_display_container: 11
2024-03-12 00:17:12,066:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-03-12 00:17:12,066:INFO:create_model() successfully completed......................................
2024-03-12 00:17:12,220:INFO:Initializing tune_model()
2024-03-12 00:17:12,221:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-03-12 00:17:12,221:INFO:Checking exceptions
2024-03-12 00:17:12,230:INFO:Copying training dataset
2024-03-12 00:17:12,233:INFO:Checking base model
2024-03-12 00:17:12,234:INFO:Base model : Gradient Boosting Classifier
2024-03-12 00:17:12,236:INFO:Declaring metric variables
2024-03-12 00:17:12,238:INFO:Defining Hyperparameters
2024-03-12 00:17:12,388:INFO:Tuning with n_jobs=-1
2024-03-12 00:17:12,389:INFO:Initializing RandomizedSearchCV
2024-03-12 00:17:12,391:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:16,469:INFO:best_params: {'actual_estimator__subsample': 1.0, 'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__learning_rate': 0.1}
2024-03-12 00:17:16,470:INFO:Hyperparameter search completed
2024-03-12 00:17:16,470:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:16,471:INFO:Initializing create_model()
2024-03-12 00:17:16,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C227C42790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 1.0, 'n_estimators': 50, 'min_samples_split': 9, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.5, 'max_features': 1.0, 'max_depth': 9, 'learning_rate': 0.1})
2024-03-12 00:17:16,471:INFO:Checking exceptions
2024-03-12 00:17:16,471:INFO:Importing libraries
2024-03-12 00:17:16,471:INFO:Copying training dataset
2024-03-12 00:17:16,475:INFO:Defining folds
2024-03-12 00:17:16,475:INFO:Declaring metric variables
2024-03-12 00:17:16,477:INFO:Importing untrained model
2024-03-12 00:17:16,477:INFO:Declaring custom model
2024-03-12 00:17:16,481:INFO:Gradient Boosting Classifier Imported successfully
2024-03-12 00:17:16,485:INFO:Starting cross validation
2024-03-12 00:17:16,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:16,488:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:16,695:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,697:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,698:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,699:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,700:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,702:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,702:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,705:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,707:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,707:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,707:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,708:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,709:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,709:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,709:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,709:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,709:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,710:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,710:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,711:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,711:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,712:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,712:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,712:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,712:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,714:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,714:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,714:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,714:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,714:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,714:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,714:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,715:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,715:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,715:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,715:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,716:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,716:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,717:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,717:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,717:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,717:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,717:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:16,718:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,718:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,718:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,718:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,719:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,719:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,720:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,720:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,720:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,720:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,721:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,721:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,721:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:16,722:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:16,735:INFO:Calculating mean and std
2024-03-12 00:17:16,736:INFO:Creating metrics dataframe
2024-03-12 00:17:16,740:INFO:Finalizing model
2024-03-12 00:17:16,861:INFO:Uploading results into container
2024-03-12 00:17:16,862:INFO:Uploading model into container now
2024-03-12 00:17:16,863:INFO:_master_model_container: 25
2024-03-12 00:17:16,863:INFO:_display_container: 12
2024-03-12 00:17:16,863:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=9,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=3,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=50, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-03-12 00:17:16,863:INFO:create_model() successfully completed......................................
2024-03-12 00:17:17,002:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:17,002:INFO:choose_better activated
2024-03-12 00:17:17,005:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:17,005:INFO:Initializing create_model()
2024-03-12 00:17:17,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:17,006:INFO:Checking exceptions
2024-03-12 00:17:17,007:INFO:Importing libraries
2024-03-12 00:17:17,007:INFO:Copying training dataset
2024-03-12 00:17:17,011:INFO:Defining folds
2024-03-12 00:17:17,011:INFO:Declaring metric variables
2024-03-12 00:17:17,011:INFO:Importing untrained model
2024-03-12 00:17:17,011:INFO:Declaring custom model
2024-03-12 00:17:17,011:INFO:Gradient Boosting Classifier Imported successfully
2024-03-12 00:17:17,012:INFO:Starting cross validation
2024-03-12 00:17:17,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:17,015:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:17,464:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:17,466:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,466:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,467:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,469:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,470:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,471:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,488:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:17,489:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,490:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,492:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,492:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:17,493:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,493:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,494:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,494:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,495:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,495:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,495:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:17,496:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,496:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,497:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,497:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,497:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,498:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,498:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:17,499:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,499:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,499:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,499:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,500:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,500:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:17,500:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,501:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:17,501:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:17,501:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,502:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,502:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,502:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,502:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,502:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,503:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,503:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,503:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,503:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,504:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,504:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,504:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,504:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,505:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,505:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,506:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,506:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:17,507:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,507:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,509:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,509:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,510:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:17,511:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:17,518:INFO:Calculating mean and std
2024-03-12 00:17:17,518:INFO:Creating metrics dataframe
2024-03-12 00:17:17,520:INFO:Finalizing model
2024-03-12 00:17:17,790:INFO:Uploading results into container
2024-03-12 00:17:17,791:INFO:Uploading model into container now
2024-03-12 00:17:17,792:INFO:_master_model_container: 26
2024-03-12 00:17:17,792:INFO:_display_container: 13
2024-03-12 00:17:17,792:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-03-12 00:17:17,792:INFO:create_model() successfully completed......................................
2024-03-12 00:17:17,935:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:17,935:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 1.0
2024-03-12 00:17:17,936:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=9,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=3,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=50, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 1.0
2024-03-12 00:17:17,936:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-03-12 00:17:17,936:INFO:choose_better completed
2024-03-12 00:17:17,936:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-03-12 00:17:17,942:INFO:_master_model_container: 26
2024-03-12 00:17:17,942:INFO:_display_container: 12
2024-03-12 00:17:17,943:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3080, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-03-12 00:17:17,943:INFO:tune_model() successfully completed......................................
2024-03-12 00:17:29,956:INFO:Initializing create_model()
2024-03-12 00:17:29,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=rf, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:29,956:INFO:Checking exceptions
2024-03-12 00:17:29,966:INFO:Importing libraries
2024-03-12 00:17:29,966:INFO:Copying training dataset
2024-03-12 00:17:29,970:INFO:Defining folds
2024-03-12 00:17:29,970:INFO:Declaring metric variables
2024-03-12 00:17:29,973:INFO:Importing untrained model
2024-03-12 00:17:29,975:INFO:Random Forest Classifier Imported successfully
2024-03-12 00:17:29,981:INFO:Starting cross validation
2024-03-12 00:17:29,983:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:30,220:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:30,222:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,222:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:30,224:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,224:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,227:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,227:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,228:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,228:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:30,230:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,232:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,233:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,235:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:30,237:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,238:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,238:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:30,239:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,239:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,241:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,242:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:30,247:INFO:Calculating mean and std
2024-03-12 00:17:30,247:INFO:Creating metrics dataframe
2024-03-12 00:17:30,251:INFO:Finalizing model
2024-03-12 00:17:30,377:INFO:Uploading results into container
2024-03-12 00:17:30,378:INFO:Uploading model into container now
2024-03-12 00:17:30,384:INFO:_master_model_container: 27
2024-03-12 00:17:30,384:INFO:_display_container: 13
2024-03-12 00:17:30,384:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False)
2024-03-12 00:17:30,384:INFO:create_model() successfully completed......................................
2024-03-12 00:17:30,533:INFO:Initializing tune_model()
2024-03-12 00:17:30,533:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-03-12 00:17:30,533:INFO:Checking exceptions
2024-03-12 00:17:30,544:INFO:Copying training dataset
2024-03-12 00:17:30,546:INFO:Checking base model
2024-03-12 00:17:30,547:INFO:Base model : Random Forest Classifier
2024-03-12 00:17:30,549:INFO:Declaring metric variables
2024-03-12 00:17:30,552:INFO:Defining Hyperparameters
2024-03-12 00:17:30,705:INFO:Tuning with n_jobs=-1
2024-03-12 00:17:30,705:INFO:Initializing RandomizedSearchCV
2024-03-12 00:17:30,708:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:33,305:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-03-12 00:17:33,305:INFO:Hyperparameter search completed
2024-03-12 00:17:33,305:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:33,306:INFO:Initializing create_model()
2024-03-12 00:17:33,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C2288C3910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.002, 'max_features': 'sqrt', 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-03-12 00:17:33,306:INFO:Checking exceptions
2024-03-12 00:17:33,306:INFO:Importing libraries
2024-03-12 00:17:33,307:INFO:Copying training dataset
2024-03-12 00:17:33,311:INFO:Defining folds
2024-03-12 00:17:33,311:INFO:Declaring metric variables
2024-03-12 00:17:33,313:INFO:Importing untrained model
2024-03-12 00:17:33,313:INFO:Declaring custom model
2024-03-12 00:17:33,316:INFO:Random Forest Classifier Imported successfully
2024-03-12 00:17:33,320:INFO:Starting cross validation
2024-03-12 00:17:33,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:33,323:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:33,702:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,704:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,705:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,708:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,708:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,709:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,709:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,709:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,710:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,710:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,710:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,711:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,711:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,711:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,712:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,712:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,712:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,712:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,714:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,715:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,715:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,715:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,715:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,716:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,716:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,716:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,716:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,717:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,717:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,717:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,718:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,718:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,718:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,719:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,719:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,720:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,720:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,721:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,721:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,722:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,724:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,728:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,729:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,729:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,729:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,730:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,730:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,731:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,732:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,732:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,732:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:33,734:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,734:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,735:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,737:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,738:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:33,738:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,738:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,740:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,740:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:33,753:INFO:Calculating mean and std
2024-03-12 00:17:33,754:INFO:Creating metrics dataframe
2024-03-12 00:17:33,759:INFO:Finalizing model
2024-03-12 00:17:33,973:INFO:Uploading results into container
2024-03-12 00:17:33,973:INFO:Uploading model into container now
2024-03-12 00:17:33,974:INFO:_master_model_container: 28
2024-03-12 00:17:33,974:INFO:_display_container: 14
2024-03-12 00:17:33,974:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.002,
                       min_samples_leaf=2, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=3080, verbose=0, warm_start=False)
2024-03-12 00:17:33,974:INFO:create_model() successfully completed......................................
2024-03-12 00:17:34,117:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:34,118:INFO:choose_better activated
2024-03-12 00:17:34,120:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:34,121:INFO:Initializing create_model()
2024-03-12 00:17:34,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:34,121:INFO:Checking exceptions
2024-03-12 00:17:34,122:INFO:Importing libraries
2024-03-12 00:17:34,122:INFO:Copying training dataset
2024-03-12 00:17:34,125:INFO:Defining folds
2024-03-12 00:17:34,125:INFO:Declaring metric variables
2024-03-12 00:17:34,125:INFO:Importing untrained model
2024-03-12 00:17:34,125:INFO:Declaring custom model
2024-03-12 00:17:34,125:INFO:Random Forest Classifier Imported successfully
2024-03-12 00:17:34,125:INFO:Starting cross validation
2024-03-12 00:17:34,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:34,129:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:34,386:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:34,388:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:34,388:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:34,388:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:34,388:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,390:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,390:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,390:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,390:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,390:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,390:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,391:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,391:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,391:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,391:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,392:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,392:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,392:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,393:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,393:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,393:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,394:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,395:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,395:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,395:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,397:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:34,397:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:34,399:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,399:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,399:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

m metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:34,400:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:34,401:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,401:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,401:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,402:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,402:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,402:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,402:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,402:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,403:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,403:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,403:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:34,403:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,403:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,404:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,405:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,405:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,405:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:34,406:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,408:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:34,415:INFO:Calculating mean and std
2024-03-12 00:17:34,415:INFO:Creating metrics dataframe
2024-03-12 00:17:34,417:INFO:Finalizing model
2024-03-12 00:17:34,542:INFO:Uploading results into container
2024-03-12 00:17:34,544:INFO:Uploading model into container now
2024-03-12 00:17:34,544:INFO:_master_model_container: 29
2024-03-12 00:17:34,544:INFO:_display_container: 15
2024-03-12 00:17:34,545:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False)
2024-03-12 00:17:34,545:INFO:create_model() successfully completed......................................
2024-03-12 00:17:34,682:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:34,682:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3080, verbose=0,
                       warm_start=False) result for Accuracy is 0.9955
2024-03-12 00:17:34,683:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.002,
                       min_samples_leaf=2, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=3080, verbose=0, warm_start=False) result for Accuracy is 1.0
2024-03-12 00:17:34,683:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.002,
                       min_samples_leaf=2, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=3080, verbose=0, warm_start=False) is best model
2024-03-12 00:17:34,683:INFO:choose_better completed
2024-03-12 00:17:34,689:INFO:_master_model_container: 29
2024-03-12 00:17:34,689:INFO:_display_container: 14
2024-03-12 00:17:34,689:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.002,
                       min_samples_leaf=2, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=3080, verbose=0, warm_start=False)
2024-03-12 00:17:34,689:INFO:tune_model() successfully completed......................................
2024-03-12 00:17:34,832:INFO:Initializing save_model()
2024-03-12 00:17:34,832:INFO:save_model(model=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.002,
                       min_samples_leaf=2, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=240, n_jobs=-1, oob_score=False,
                       random_state=3080, verbose=0, warm_start=False), model_name=tuned_rf_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\macks\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['legs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['animal_name'],
                                    transformer=TargetEncoder(cols=['animal_name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-03-12 00:17:34,832:INFO:Adding model into prep_pipe
2024-03-12 00:17:34,889:INFO:tuned_rf_model.pkl saved in current working directory
2024-03-12 00:17:34,893:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['legs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'...
                 RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                                        class_weight='balanced_subsample',
                                        criterion='gini', max_depth=6,
                                        max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.002,
                                        min_samples_leaf=2, min_samples_split=5,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=240,
                                        n_jobs=-1, oob_score=False,
                                        random_state=3080, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-03-12 00:17:34,893:INFO:save_model() successfully completed......................................
2024-03-12 00:17:41,268:INFO:Initializing create_model()
2024-03-12 00:17:41,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=lr, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:41,268:INFO:Checking exceptions
2024-03-12 00:17:41,282:INFO:Importing libraries
2024-03-12 00:17:41,284:INFO:Copying training dataset
2024-03-12 00:17:41,290:INFO:Defining folds
2024-03-12 00:17:41,291:INFO:Declaring metric variables
2024-03-12 00:17:41,293:INFO:Importing untrained model
2024-03-12 00:17:41,295:INFO:Logistic Regression Imported successfully
2024-03-12 00:17:41,301:INFO:Starting cross validation
2024-03-12 00:17:41,302:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:41,375:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:41,376:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,380:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,383:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,392:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:41,392:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:41,392:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,392:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,393:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:41,394:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:41,394:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,395:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,396:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,398:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,398:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,398:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,400:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,400:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,402:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:41,411:INFO:Calculating mean and std
2024-03-12 00:17:41,411:INFO:Creating metrics dataframe
2024-03-12 00:17:41,416:INFO:Finalizing model
2024-03-12 00:17:41,473:INFO:Uploading results into container
2024-03-12 00:17:41,473:INFO:Uploading model into container now
2024-03-12 00:17:41,484:INFO:_master_model_container: 30
2024-03-12 00:17:41,484:INFO:_display_container: 15
2024-03-12 00:17:41,484:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-12 00:17:41,484:INFO:create_model() successfully completed......................................
2024-03-12 00:17:41,665:INFO:Initializing tune_model()
2024-03-12 00:17:41,665:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-03-12 00:17:41,665:INFO:Checking exceptions
2024-03-12 00:17:41,682:INFO:Copying training dataset
2024-03-12 00:17:41,685:INFO:Checking base model
2024-03-12 00:17:41,685:INFO:Base model : Logistic Regression
2024-03-12 00:17:41,688:INFO:Declaring metric variables
2024-03-12 00:17:41,691:INFO:Defining Hyperparameters
2024-03-12 00:17:41,889:INFO:Tuning with n_jobs=-1
2024-03-12 00:17:41,889:INFO:Initializing RandomizedSearchCV
2024-03-12 00:17:41,891:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:42,674:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 3.905}
2024-03-12 00:17:42,674:INFO:Hyperparameter search completed
2024-03-12 00:17:42,674:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:42,674:INFO:Initializing create_model()
2024-03-12 00:17:42,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22CF55490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 3.905})
2024-03-12 00:17:42,674:INFO:Checking exceptions
2024-03-12 00:17:42,674:INFO:Importing libraries
2024-03-12 00:17:42,674:INFO:Copying training dataset
2024-03-12 00:17:42,679:INFO:Defining folds
2024-03-12 00:17:42,679:INFO:Declaring metric variables
2024-03-12 00:17:42,682:INFO:Importing untrained model
2024-03-12 00:17:42,682:INFO:Declaring custom model
2024-03-12 00:17:42,685:INFO:Logistic Regression Imported successfully
2024-03-12 00:17:42,689:INFO:Starting cross validation
2024-03-12 00:17:42,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:42,693:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:42,795:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,797:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,797:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,797:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,797:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,798:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,798:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,800:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,800:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,801:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,801:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,801:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,801:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,802:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,802:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,802:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,802:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,803:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,803:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,803:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,803:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,803:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,804:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,804:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,804:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,804:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

m metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,806:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,806:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,806:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,807:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,807:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,807:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,807:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,807:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,808:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,808:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,809:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,809:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,809:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,810:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,810:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,810:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:42,810:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,811:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,811:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,813:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:42,813:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,814:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,816:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,816:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:42,827:INFO:Calculating mean and std
2024-03-12 00:17:42,828:INFO:Creating metrics dataframe
2024-03-12 00:17:42,832:INFO:Finalizing model
2024-03-12 00:17:42,878:INFO:Uploading results into container
2024-03-12 00:17:42,878:INFO:Uploading model into container now
2024-03-12 00:17:42,879:INFO:_master_model_container: 31
2024-03-12 00:17:42,879:INFO:_display_container: 16
2024-03-12 00:17:42,879:INFO:LogisticRegression(C=3.905, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-12 00:17:42,879:INFO:create_model() successfully completed......................................
2024-03-12 00:17:43,082:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:43,082:INFO:choose_better activated
2024-03-12 00:17:43,084:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:43,085:INFO:Initializing create_model()
2024-03-12 00:17:43,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:43,085:INFO:Checking exceptions
2024-03-12 00:17:43,086:INFO:Importing libraries
2024-03-12 00:17:43,086:INFO:Copying training dataset
2024-03-12 00:17:43,089:INFO:Defining folds
2024-03-12 00:17:43,089:INFO:Declaring metric variables
2024-03-12 00:17:43,089:INFO:Importing untrained model
2024-03-12 00:17:43,089:INFO:Declaring custom model
2024-03-12 00:17:43,090:INFO:Logistic Regression Imported successfully
2024-03-12 00:17:43,090:INFO:Starting cross validation
2024-03-12 00:17:43,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:43,092:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:43,172:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,173:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,173:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,174:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,174:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,175:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,175:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,175:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,175:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,177:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,177:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,177:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,178:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,178:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,178:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,178:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,179:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,179:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,180:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,180:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,180:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,180:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,180:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,180:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,181:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,181:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,181:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,181:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,181:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,182:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,182:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,182:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,182:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,182:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,182:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,183:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,183:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,183:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,184:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,184:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,184:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,184:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,184:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,184:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,186:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,187:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,187:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,187:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,187:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,188:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,188:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,189:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,190:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,190:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:43,190:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:43,190:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,191:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,193:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:43,203:INFO:Calculating mean and std
2024-03-12 00:17:43,203:INFO:Creating metrics dataframe
2024-03-12 00:17:43,205:INFO:Finalizing model
2024-03-12 00:17:43,236:INFO:Uploading results into container
2024-03-12 00:17:43,237:INFO:Uploading model into container now
2024-03-12 00:17:43,237:INFO:_master_model_container: 32
2024-03-12 00:17:43,237:INFO:_display_container: 17
2024-03-12 00:17:43,237:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-12 00:17:43,237:INFO:create_model() successfully completed......................................
2024-03-12 00:17:43,396:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:43,397:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.9909
2024-03-12 00:17:43,397:INFO:LogisticRegression(C=3.905, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2024-03-12 00:17:43,398:INFO:LogisticRegression(C=3.905, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-03-12 00:17:43,398:INFO:choose_better completed
2024-03-12 00:17:43,405:INFO:_master_model_container: 32
2024-03-12 00:17:43,405:INFO:_display_container: 16
2024-03-12 00:17:43,406:INFO:LogisticRegression(C=3.905, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3080, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-12 00:17:43,406:INFO:tune_model() successfully completed......................................
2024-03-12 00:17:46,251:INFO:Initializing create_model()
2024-03-12 00:17:46,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=ridge, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:46,252:INFO:Checking exceptions
2024-03-12 00:17:46,260:INFO:Importing libraries
2024-03-12 00:17:46,261:INFO:Copying training dataset
2024-03-12 00:17:46,266:INFO:Defining folds
2024-03-12 00:17:46,266:INFO:Declaring metric variables
2024-03-12 00:17:46,268:INFO:Importing untrained model
2024-03-12 00:17:46,271:INFO:Ridge Classifier Imported successfully
2024-03-12 00:17:46,275:INFO:Starting cross validation
2024-03-12 00:17:46,277:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:46,340:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:46,342:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,343:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:46,343:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:46,345:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,345:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,345:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,345:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:46,345:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,345:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,346:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,348:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,348:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,349:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,350:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:46,351:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,351:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,353:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,355:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:46,365:INFO:Calculating mean and std
2024-03-12 00:17:46,365:INFO:Creating metrics dataframe
2024-03-12 00:17:46,371:INFO:Finalizing model
2024-03-12 00:17:46,408:INFO:Uploading results into container
2024-03-12 00:17:46,410:INFO:Uploading model into container now
2024-03-12 00:17:46,419:INFO:_master_model_container: 33
2024-03-12 00:17:46,419:INFO:_display_container: 17
2024-03-12 00:17:46,419:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001)
2024-03-12 00:17:46,419:INFO:create_model() successfully completed......................................
2024-03-12 00:17:46,597:INFO:Initializing tune_model()
2024-03-12 00:17:46,597:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-03-12 00:17:46,597:INFO:Checking exceptions
2024-03-12 00:17:46,609:INFO:Copying training dataset
2024-03-12 00:17:46,612:INFO:Checking base model
2024-03-12 00:17:46,612:INFO:Base model : Ridge Classifier
2024-03-12 00:17:46,614:INFO:Declaring metric variables
2024-03-12 00:17:46,615:INFO:Defining Hyperparameters
2024-03-12 00:17:46,773:INFO:Tuning with n_jobs=-1
2024-03-12 00:17:46,773:INFO:Initializing RandomizedSearchCV
2024-03-12 00:17:46,776:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:47,425:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 8.33}
2024-03-12 00:17:47,425:INFO:Hyperparameter search completed
2024-03-12 00:17:47,425:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:47,425:INFO:Initializing create_model()
2024-03-12 00:17:47,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22BB04050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': True, 'alpha': 8.33})
2024-03-12 00:17:47,425:INFO:Checking exceptions
2024-03-12 00:17:47,425:INFO:Importing libraries
2024-03-12 00:17:47,425:INFO:Copying training dataset
2024-03-12 00:17:47,429:INFO:Defining folds
2024-03-12 00:17:47,429:INFO:Declaring metric variables
2024-03-12 00:17:47,432:INFO:Importing untrained model
2024-03-12 00:17:47,432:INFO:Declaring custom model
2024-03-12 00:17:47,435:INFO:Ridge Classifier Imported successfully
2024-03-12 00:17:47,439:INFO:Starting cross validation
2024-03-12 00:17:47,441:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:47,442:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:47,534:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,536:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,537:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,538:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,538:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,539:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,539:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,540:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,541:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,541:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,541:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,542:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,542:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,542:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,542:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,543:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,543:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,543:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,544:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,544:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,545:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,545:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,545:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,546:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,547:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,547:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,548:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,548:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,549:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,549:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,549:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,550:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,550:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,550:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,551:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,551:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,552:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,552:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,552:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,553:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,553:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,554:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,554:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,555:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,555:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,555:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,555:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,556:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,557:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,558:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,558:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,558:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,562:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,563:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,566:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,567:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,573:INFO:Calculating mean and std
2024-03-12 00:17:47,573:INFO:Creating metrics dataframe
2024-03-12 00:17:47,577:INFO:Finalizing model
2024-03-12 00:17:47,608:INFO:Uploading results into container
2024-03-12 00:17:47,608:INFO:Uploading model into container now
2024-03-12 00:17:47,608:INFO:_master_model_container: 34
2024-03-12 00:17:47,608:INFO:_display_container: 18
2024-03-12 00:17:47,610:INFO:RidgeClassifier(alpha=8.33, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001)
2024-03-12 00:17:47,610:INFO:create_model() successfully completed......................................
2024-03-12 00:17:47,789:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:47,789:INFO:choose_better activated
2024-03-12 00:17:47,792:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:47,792:INFO:Initializing create_model()
2024-03-12 00:17:47,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:47,792:INFO:Checking exceptions
2024-03-12 00:17:47,793:INFO:Importing libraries
2024-03-12 00:17:47,793:INFO:Copying training dataset
2024-03-12 00:17:47,798:INFO:Defining folds
2024-03-12 00:17:47,798:INFO:Declaring metric variables
2024-03-12 00:17:47,798:INFO:Importing untrained model
2024-03-12 00:17:47,798:INFO:Declaring custom model
2024-03-12 00:17:47,798:INFO:Ridge Classifier Imported successfully
2024-03-12 00:17:47,798:INFO:Starting cross validation
2024-03-12 00:17:47,800:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:47,803:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:47,871:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,873:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,874:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,875:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,875:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,875:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,877:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,877:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,877:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,878:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,878:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,878:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,879:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,879:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,879:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,879:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,879:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,879:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,880:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,880:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,880:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,880:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,881:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,881:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,881:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,882:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,882:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,882:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,882:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,882:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,883:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,883:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,883:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,883:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,883:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,884:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,884:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:47,884:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,884:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,884:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,884:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,884:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,885:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,885:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,885:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,885:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,886:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,886:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,886:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,886:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,886:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,887:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,887:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,887:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,887:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,887:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,888:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,888:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,888:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:47,889:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,889:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:47,893:INFO:Calculating mean and std
2024-03-12 00:17:47,893:INFO:Creating metrics dataframe
2024-03-12 00:17:47,894:INFO:Finalizing model
2024-03-12 00:17:47,918:INFO:Uploading results into container
2024-03-12 00:17:47,918:INFO:Uploading model into container now
2024-03-12 00:17:47,918:INFO:_master_model_container: 35
2024-03-12 00:17:47,918:INFO:_display_container: 19
2024-03-12 00:17:47,918:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001)
2024-03-12 00:17:47,918:INFO:create_model() successfully completed......................................
2024-03-12 00:17:48,104:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:48,104:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001) result for Accuracy is 1.0
2024-03-12 00:17:48,104:INFO:RidgeClassifier(alpha=8.33, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001) result for Accuracy is 1.0
2024-03-12 00:17:48,104:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001) is best model
2024-03-12 00:17:48,104:INFO:choose_better completed
2024-03-12 00:17:48,105:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-03-12 00:17:48,113:INFO:_master_model_container: 35
2024-03-12 00:17:48,113:INFO:_display_container: 18
2024-03-12 00:17:48,113:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3080, solver='auto',
                tol=0.0001)
2024-03-12 00:17:48,113:INFO:tune_model() successfully completed......................................
2024-03-12 00:17:51,112:INFO:Initializing create_model()
2024-03-12 00:17:51,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:51,112:INFO:Checking exceptions
2024-03-12 00:17:51,124:INFO:Importing libraries
2024-03-12 00:17:51,124:INFO:Copying training dataset
2024-03-12 00:17:51,128:INFO:Defining folds
2024-03-12 00:17:51,128:INFO:Declaring metric variables
2024-03-12 00:17:51,130:INFO:Importing untrained model
2024-03-12 00:17:51,133:INFO:SVM - Linear Kernel Imported successfully
2024-03-12 00:17:51,138:INFO:Starting cross validation
2024-03-12 00:17:51,140:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:51,142:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:51,243:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,244:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,245:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,247:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,248:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,248:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,249:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,250:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,251:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,253:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,253:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,253:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,254:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,254:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,254:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,254:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,255:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,256:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,257:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,257:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,258:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,259:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,261:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,262:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,262:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,263:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,264:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,264:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,264:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,265:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,266:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,267:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,267:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,268:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,270:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,271:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,272:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,274:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,274:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,275:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,275:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,278:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,278:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,279:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,279:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,280:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,280:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,282:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,282:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,283:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,285:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:51,287:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,288:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,288:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,290:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,291:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,291:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:51,292:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:51,300:INFO:Calculating mean and std
2024-03-12 00:17:51,301:INFO:Creating metrics dataframe
2024-03-12 00:17:51,304:INFO:Finalizing model
2024-03-12 00:17:51,361:INFO:Uploading results into container
2024-03-12 00:17:51,362:INFO:Uploading model into container now
2024-03-12 00:17:51,370:INFO:_master_model_container: 36
2024-03-12 00:17:51,370:INFO:_display_container: 19
2024-03-12 00:17:51,371:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-03-12 00:17:51,371:INFO:create_model() successfully completed......................................
2024-03-12 00:17:51,526:INFO:Initializing tune_model()
2024-03-12 00:17:51,526:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-03-12 00:17:51,526:INFO:Checking exceptions
2024-03-12 00:17:51,537:INFO:Copying training dataset
2024-03-12 00:17:51,540:INFO:Checking base model
2024-03-12 00:17:51,541:INFO:Base model : SVM - Linear Kernel
2024-03-12 00:17:51,542:INFO:Declaring metric variables
2024-03-12 00:17:51,545:INFO:Defining Hyperparameters
2024-03-12 00:17:51,700:INFO:Tuning with n_jobs=-1
2024-03-12 00:17:51,700:INFO:Initializing RandomizedSearchCV
2024-03-12 00:17:51,704:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:52,536:INFO:best_params: {'actual_estimator__penalty': 'l2', 'actual_estimator__learning_rate': 'optimal', 'actual_estimator__l1_ratio': 0.8600000001, 'actual_estimator__fit_intercept': False, 'actual_estimator__eta0': 0.4, 'actual_estimator__alpha': 0.02}
2024-03-12 00:17:52,536:INFO:Hyperparameter search completed
2024-03-12 00:17:52,537:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:52,537:INFO:Initializing create_model()
2024-03-12 00:17:52,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22ABF5550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'l2', 'learning_rate': 'optimal', 'l1_ratio': 0.8600000001, 'fit_intercept': False, 'eta0': 0.4, 'alpha': 0.02})
2024-03-12 00:17:52,537:INFO:Checking exceptions
2024-03-12 00:17:52,538:INFO:Importing libraries
2024-03-12 00:17:52,538:INFO:Copying training dataset
2024-03-12 00:17:52,541:INFO:Defining folds
2024-03-12 00:17:52,541:INFO:Declaring metric variables
2024-03-12 00:17:52,545:INFO:Importing untrained model
2024-03-12 00:17:52,545:INFO:Declaring custom model
2024-03-12 00:17:52,548:INFO:SVM - Linear Kernel Imported successfully
2024-03-12 00:17:52,553:INFO:Starting cross validation
2024-03-12 00:17:52,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:52,556:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:52,658:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,660:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,661:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,661:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,661:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,662:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,663:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,664:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,665:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,666:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,668:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,669:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,670:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,670:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,672:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,672:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,674:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,675:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,676:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,680:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,681:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,681:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,682:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,683:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,684:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,685:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,685:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,685:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,687:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,687:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,687:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,687:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,687:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,688:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,688:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,689:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,690:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,690:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,690:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:52,692:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,692:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:52,693:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,696:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,697:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:52,708:INFO:Calculating mean and std
2024-03-12 00:17:52,709:INFO:Creating metrics dataframe
2024-03-12 00:17:52,713:INFO:Finalizing model
2024-03-12 00:17:52,768:INFO:Uploading results into container
2024-03-12 00:17:52,769:INFO:Uploading model into container now
2024-03-12 00:17:52,769:INFO:_master_model_container: 37
2024-03-12 00:17:52,769:INFO:_display_container: 20
2024-03-12 00:17:52,770:INFO:SGDClassifier(alpha=0.02, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.4, fit_intercept=False,
              l1_ratio=0.8600000001, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-03-12 00:17:52,770:INFO:create_model() successfully completed......................................
2024-03-12 00:17:52,920:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:52,920:INFO:choose_better activated
2024-03-12 00:17:52,922:INFO:SubProcess create_model() called ==================================
2024-03-12 00:17:52,923:INFO:Initializing create_model()
2024-03-12 00:17:52,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:52,923:INFO:Checking exceptions
2024-03-12 00:17:52,924:INFO:Importing libraries
2024-03-12 00:17:52,924:INFO:Copying training dataset
2024-03-12 00:17:52,928:INFO:Defining folds
2024-03-12 00:17:52,928:INFO:Declaring metric variables
2024-03-12 00:17:52,928:INFO:Importing untrained model
2024-03-12 00:17:52,928:INFO:Declaring custom model
2024-03-12 00:17:52,928:INFO:SVM - Linear Kernel Imported successfully
2024-03-12 00:17:52,928:INFO:Starting cross validation
2024-03-12 00:17:52,929:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:52,931:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:53,015:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,017:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,018:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,020:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,021:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,022:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,023:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,023:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,023:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,024:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,024:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,025:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,025:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,025:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,025:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,025:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,025:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,025:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,027:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,028:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,028:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,028:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,028:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,029:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,029:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,029:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,030:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,030:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,030:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,030:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,030:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,030:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,030:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,030:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,031:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,031:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,032:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,032:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,032:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-12 00:17:53,032:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,032:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,034:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,034:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,035:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,035:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,035:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,035:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,036:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,036:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,036:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:53,037:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,038:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

rage, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,038:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,039:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:53,042:INFO:Calculating mean and std
2024-03-12 00:17:53,042:INFO:Creating metrics dataframe
2024-03-12 00:17:53,043:INFO:Finalizing model
2024-03-12 00:17:53,082:INFO:Uploading results into container
2024-03-12 00:17:53,083:INFO:Uploading model into container now
2024-03-12 00:17:53,083:INFO:_master_model_container: 38
2024-03-12 00:17:53,083:INFO:_display_container: 21
2024-03-12 00:17:53,084:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-03-12 00:17:53,084:INFO:create_model() successfully completed......................................
2024-03-12 00:17:53,221:INFO:SubProcess create_model() end ==================================
2024-03-12 00:17:53,221:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) result for Accuracy is 0.9818
2024-03-12 00:17:53,222:INFO:SGDClassifier(alpha=0.02, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.4, fit_intercept=False,
              l1_ratio=0.8600000001, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) result for Accuracy is 0.9955
2024-03-12 00:17:53,222:INFO:SGDClassifier(alpha=0.02, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.4, fit_intercept=False,
              l1_ratio=0.8600000001, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) is best model
2024-03-12 00:17:53,222:INFO:choose_better completed
2024-03-12 00:17:53,228:INFO:_master_model_container: 38
2024-03-12 00:17:53,228:INFO:_display_container: 20
2024-03-12 00:17:53,228:INFO:SGDClassifier(alpha=0.02, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.4, fit_intercept=False,
              l1_ratio=0.8600000001, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-03-12 00:17:53,228:INFO:tune_model() successfully completed......................................
2024-03-12 00:17:53,377:INFO:Initializing save_model()
2024-03-12 00:17:53,378:INFO:save_model(model=SGDClassifier(alpha=0.02, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.4, fit_intercept=False,
              l1_ratio=0.8600000001, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), model_name=tuned_svm_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\macks\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['legs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['animal_name'],
                                    transformer=TargetEncoder(cols=['animal_name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-03-12 00:17:53,378:INFO:Adding model into prep_pipe
2024-03-12 00:17:53,384:INFO:tuned_svm_model.pkl saved in current working directory
2024-03-12 00:17:53,389:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['legs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'...
                 SGDClassifier(alpha=0.02, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.4,
                               fit_intercept=False, l1_ratio=0.8600000001,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=3080,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2024-03-12 00:17:53,389:INFO:save_model() successfully completed......................................
2024-03-12 00:17:56,956:INFO:Initializing create_model()
2024-03-12 00:17:56,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:17:56,956:INFO:Checking exceptions
2024-03-12 00:17:56,965:INFO:Importing libraries
2024-03-12 00:17:56,965:INFO:Copying training dataset
2024-03-12 00:17:56,969:INFO:Defining folds
2024-03-12 00:17:56,969:INFO:Declaring metric variables
2024-03-12 00:17:56,971:INFO:Importing untrained model
2024-03-12 00:17:56,973:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-12 00:17:56,979:INFO:Starting cross validation
2024-03-12 00:17:56,981:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:17:56,983:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:17:57,941:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:57,942:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:57,944:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:57,946:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:57,948:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:57,949:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:57,950:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,004:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:58,006:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,007:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:58,007:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:58,007:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,009:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,009:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,009:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,010:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,011:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,012:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,012:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,012:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,014:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,014:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,016:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,081:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:58,081:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:58,082:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,083:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,084:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,085:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,085:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,087:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,087:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,088:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,089:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,090:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,091:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,091:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,103:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:58,104:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,106:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,107:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,108:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,113:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,114:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,157:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:58,158:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,160:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,162:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,163:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,164:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,166:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,175:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:58,178:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,181:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,182:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,183:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,226:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:17:58,227:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,229:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,231:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,232:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:17:58,233:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:17:58,239:INFO:Calculating mean and std
2024-03-12 00:17:58,241:INFO:Creating metrics dataframe
2024-03-12 00:17:58,247:INFO:Finalizing model
2024-03-12 00:17:58,301:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000188 seconds.
2024-03-12 00:17:58,301:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-12 00:17:58,301:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-12 00:17:58,301:INFO:[LightGBM] [Info] Total Bins 37
2024-03-12 00:17:58,303:INFO:[LightGBM] [Info] Number of data points in the train set: 220, number of used features: 14
2024-03-12 00:17:58,303:INFO:[LightGBM] [Info] Start training from score -0.396415
2024-03-12 00:17:58,303:INFO:[LightGBM] [Info] Start training from score -2.135531
2024-03-12 00:17:58,303:INFO:[LightGBM] [Info] Start training from score -2.995732
2024-03-12 00:17:58,303:INFO:[LightGBM] [Info] Start training from score -2.908721
2024-03-12 00:17:58,303:INFO:[LightGBM] [Info] Start training from score -3.784190
2024-03-12 00:17:58,304:INFO:[LightGBM] [Info] Start training from score -3.447717
2024-03-12 00:17:58,304:INFO:[LightGBM] [Info] Start training from score -2.995732
2024-03-12 00:17:58,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,398:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,404:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:17:58,408:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:17:58,427:INFO:Uploading results into container
2024-03-12 00:17:58,429:INFO:Uploading model into container now
2024-03-12 00:17:58,439:INFO:_master_model_container: 39
2024-03-12 00:17:58,439:INFO:_display_container: 21
2024-03-12 00:17:58,440:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3080, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-03-12 00:17:58,440:INFO:create_model() successfully completed......................................
2024-03-12 00:17:58,628:INFO:Initializing tune_model()
2024-03-12 00:17:58,629:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3080, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-03-12 00:17:58,629:INFO:Checking exceptions
2024-03-12 00:17:58,638:INFO:Copying training dataset
2024-03-12 00:17:58,640:INFO:Checking base model
2024-03-12 00:17:58,641:INFO:Base model : Light Gradient Boosting Machine
2024-03-12 00:17:58,643:INFO:Declaring metric variables
2024-03-12 00:17:58,645:INFO:Defining Hyperparameters
2024-03-12 00:17:58,815:INFO:Tuning with n_jobs=-1
2024-03-12 00:17:58,815:INFO:Initializing RandomizedSearchCV
2024-03-12 00:17:58,818:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:18:09,015:INFO:best_params: {'actual_estimator__reg_lambda': 4, 'actual_estimator__reg_alpha': 0.7, 'actual_estimator__num_leaves': 200, 'actual_estimator__n_estimators': 30, 'actual_estimator__min_split_gain': 0.3, 'actual_estimator__min_child_samples': 11, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__feature_fraction': 0.8, 'actual_estimator__bagging_freq': 1, 'actual_estimator__bagging_fraction': 0.9}
2024-03-12 00:18:09,017:INFO:Hyperparameter search completed
2024-03-12 00:18:09,017:INFO:SubProcess create_model() called ==================================
2024-03-12 00:18:09,018:INFO:Initializing create_model()
2024-03-12 00:18:09,018:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3080, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C22B58CC90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 4, 'reg_alpha': 0.7, 'num_leaves': 200, 'n_estimators': 30, 'min_split_gain': 0.3, 'min_child_samples': 11, 'learning_rate': 0.4, 'feature_fraction': 0.8, 'bagging_freq': 1, 'bagging_fraction': 0.9})
2024-03-12 00:18:09,018:INFO:Checking exceptions
2024-03-12 00:18:09,018:INFO:Importing libraries
2024-03-12 00:18:09,018:INFO:Copying training dataset
2024-03-12 00:18:09,024:INFO:Defining folds
2024-03-12 00:18:09,024:INFO:Declaring metric variables
2024-03-12 00:18:09,027:INFO:Importing untrained model
2024-03-12 00:18:09,027:INFO:Declaring custom model
2024-03-12 00:18:09,033:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-12 00:18:09,040:INFO:Starting cross validation
2024-03-12 00:18:09,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:18:09,047:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:18:09,269:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,271:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,273:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,274:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,275:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,275:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,277:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,278:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,279:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,279:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,281:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,283:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,284:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,286:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,291:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,294:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,295:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,297:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,298:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,299:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,301:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,338:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,340:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,341:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,343:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,345:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,350:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,351:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,364:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,367:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,369:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,371:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,373:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,373:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,374:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,375:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,377:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,379:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,380:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,438:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,439:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,442:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,443:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,446:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,452:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,453:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,455:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,456:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,458:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,459:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,462:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,464:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,467:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,469:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,470:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,491:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:09,492:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,496:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,497:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:09,498:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:09,510:INFO:Calculating mean and std
2024-03-12 00:18:09,511:INFO:Creating metrics dataframe
2024-03-12 00:18:09,517:INFO:Finalizing model
2024-03-12 00:18:09,566:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2024-03-12 00:18:09,566:INFO:[LightGBM] [Warning] bagging_fraction is set=0.9, subsample=1.0 will be ignored. Current value: bagging_fraction=0.9
2024-03-12 00:18:09,567:INFO:[LightGBM] [Warning] bagging_freq is set=1, subsample_freq=0 will be ignored. Current value: bagging_freq=1
2024-03-12 00:18:09,568:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2024-03-12 00:18:09,569:INFO:[LightGBM] [Warning] bagging_fraction is set=0.9, subsample=1.0 will be ignored. Current value: bagging_fraction=0.9
2024-03-12 00:18:09,569:INFO:[LightGBM] [Warning] bagging_freq is set=1, subsample_freq=0 will be ignored. Current value: bagging_freq=1
2024-03-12 00:18:09,569:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000281 seconds.
2024-03-12 00:18:09,570:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-12 00:18:09,570:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-12 00:18:09,570:INFO:[LightGBM] [Info] Total Bins 49
2024-03-12 00:18:09,570:INFO:[LightGBM] [Info] Number of data points in the train set: 220, number of used features: 20
2024-03-12 00:18:09,570:INFO:[LightGBM] [Info] Start training from score -0.396415
2024-03-12 00:18:09,571:INFO:[LightGBM] [Info] Start training from score -2.135531
2024-03-12 00:18:09,571:INFO:[LightGBM] [Info] Start training from score -2.995732
2024-03-12 00:18:09,571:INFO:[LightGBM] [Info] Start training from score -2.908721
2024-03-12 00:18:09,571:INFO:[LightGBM] [Info] Start training from score -3.784190
2024-03-12 00:18:09,571:INFO:[LightGBM] [Info] Start training from score -3.447717
2024-03-12 00:18:09,571:INFO:[LightGBM] [Info] Start training from score -2.995732
2024-03-12 00:18:09,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,577:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,577:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,577:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,577:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,577:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,590:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,593:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,598:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,601:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:09,601:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:09,608:INFO:Uploading results into container
2024-03-12 00:18:09,610:INFO:Uploading model into container now
2024-03-12 00:18:09,611:INFO:_master_model_container: 40
2024-03-12 00:18:09,611:INFO:_display_container: 22
2024-03-12 00:18:09,612:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=1, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=11, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=30, n_jobs=-1, num_leaves=200, objective=None,
               random_state=3080, reg_alpha=0.7, reg_lambda=4, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-03-12 00:18:09,612:INFO:create_model() successfully completed......................................
2024-03-12 00:18:09,800:INFO:SubProcess create_model() end ==================================
2024-03-12 00:18:09,801:INFO:choose_better activated
2024-03-12 00:18:09,803:INFO:SubProcess create_model() called ==================================
2024-03-12 00:18:09,804:INFO:Initializing create_model()
2024-03-12 00:18:09,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3080, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-12 00:18:09,804:INFO:Checking exceptions
2024-03-12 00:18:09,805:INFO:Importing libraries
2024-03-12 00:18:09,805:INFO:Copying training dataset
2024-03-12 00:18:09,808:INFO:Defining folds
2024-03-12 00:18:09,808:INFO:Declaring metric variables
2024-03-12 00:18:09,808:INFO:Importing untrained model
2024-03-12 00:18:09,808:INFO:Declaring custom model
2024-03-12 00:18:09,808:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-12 00:18:09,808:INFO:Starting cross validation
2024-03-12 00:18:09,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-12 00:18:09,812:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(

2024-03-12 00:18:10,720:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:10,721:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,723:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,725:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,726:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,727:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,728:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,760:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:10,762:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,764:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,766:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,767:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,770:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,771:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,791:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:10,792:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:10,793:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,794:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,796:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,796:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,797:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,799:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,801:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,803:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,805:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,807:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,855:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:10,857:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,862:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,864:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,866:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,869:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:10,872:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,873:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,875:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,876:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,878:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,919:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:10,922:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,923:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,925:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,926:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,928:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,932:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:10,934:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,936:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,937:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,939:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,940:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,941:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,957:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:10,959:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,966:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,968:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,970:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:10,971:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:10,972:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:11,002:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\frame.py", line 798, in __init__
    mgr = ndarray_to_mgr(
          ^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 320, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\pandas\core\internals\construction.py", line 553, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-12 00:18:11,003:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:11,006:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:11,008:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-12 00:18:11,009:WARNING:c:\Users\macks\anaconda3\envs\dev\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-12 00:18:11,016:INFO:Calculating mean and std
2024-03-12 00:18:11,016:INFO:Creating metrics dataframe
2024-03-12 00:18:11,018:INFO:Finalizing model
2024-03-12 00:18:11,063:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000193 seconds.
2024-03-12 00:18:11,063:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-03-12 00:18:11,063:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-03-12 00:18:11,063:INFO:[LightGBM] [Info] Total Bins 37
2024-03-12 00:18:11,063:INFO:[LightGBM] [Info] Number of data points in the train set: 220, number of used features: 14
2024-03-12 00:18:11,064:INFO:[LightGBM] [Info] Start training from score -0.396415
2024-03-12 00:18:11,064:INFO:[LightGBM] [Info] Start training from score -2.135531
2024-03-12 00:18:11,064:INFO:[LightGBM] [Info] Start training from score -2.995732
2024-03-12 00:18:11,064:INFO:[LightGBM] [Info] Start training from score -2.908721
2024-03-12 00:18:11,064:INFO:[LightGBM] [Info] Start training from score -3.784190
2024-03-12 00:18:11,064:INFO:[LightGBM] [Info] Start training from score -3.447717
2024-03-12 00:18:11,064:INFO:[LightGBM] [Info] Start training from score -2.995732
2024-03-12 00:18:11,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,172:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,175:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-03-12 00:18:11,178:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2024-03-12 00:18:11,192:INFO:Uploading results into container
2024-03-12 00:18:11,192:INFO:Uploading model into container now
2024-03-12 00:18:11,193:INFO:_master_model_container: 41
2024-03-12 00:18:11,193:INFO:_display_container: 23
2024-03-12 00:18:11,194:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3080, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-03-12 00:18:11,194:INFO:create_model() successfully completed......................................
2024-03-12 00:18:11,399:INFO:SubProcess create_model() end ==================================
2024-03-12 00:18:11,400:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3080, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.4682
2024-03-12 00:18:11,400:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=1, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=11, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=30, n_jobs=-1, num_leaves=200, objective=None,
               random_state=3080, reg_alpha=0.7, reg_lambda=4, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.9273
2024-03-12 00:18:11,401:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=1, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=11, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=30, n_jobs=-1, num_leaves=200, objective=None,
               random_state=3080, reg_alpha=0.7, reg_lambda=4, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2024-03-12 00:18:11,401:INFO:choose_better completed
2024-03-12 00:18:11,407:INFO:_master_model_container: 41
2024-03-12 00:18:11,408:INFO:_display_container: 22
2024-03-12 00:18:11,408:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=1, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.4, max_depth=-1,
               min_child_samples=11, min_child_weight=0.001, min_split_gain=0.3,
               n_estimators=30, n_jobs=-1, num_leaves=200, objective=None,
               random_state=3080, reg_alpha=0.7, reg_lambda=4, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-03-12 00:18:11,408:INFO:tune_model() successfully completed......................................
2024-03-12 00:18:11,591:INFO:Initializing evaluate_model()
2024-03-12 00:18:11,591:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-03-12 00:18:11,599:INFO:Initializing plot_model()
2024-03-12 00:18:11,599:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-12 00:18:11,599:INFO:Checking exceptions
2024-03-12 00:18:11,601:INFO:Preloading libraries
2024-03-12 00:18:11,601:INFO:Copying training dataset
2024-03-12 00:18:11,601:INFO:Plot type: pipeline
2024-03-12 00:18:11,687:INFO:Visual Rendered Successfully
2024-03-12 00:18:11,826:INFO:plot_model() successfully completed......................................
2024-03-12 00:20:28,575:INFO:Initializing plot_model()
2024-03-12 00:20:28,575:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C22B4E64D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3080, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-03-12 00:20:28,575:INFO:Checking exceptions
2024-03-12 00:20:28,577:INFO:Preloading libraries
2024-03-12 00:20:28,577:INFO:Copying training dataset
2024-03-12 00:20:28,577:INFO:Plot type: parameter
2024-03-12 00:20:28,580:INFO:Visual Rendered Successfully
2024-03-12 00:20:28,712:INFO:plot_model() successfully completed......................................
